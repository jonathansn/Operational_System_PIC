

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jun 10 23:53:12 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           ; Version 1.42
    36                           ; Generated 13/04/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4520 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     _TOS	set	4093
    70  0000                     _CCPR1	set	4030
    71  0000                     _TMR0	set	4054
    72  0000                     _TOSL	set	4093
    73  0000                     _TOSH	set	4094
    74  0000                     _TOSU	set	4095
    75  0000                     _STKPTR	set	4092
    76  0000                     _STATUS	set	4056
    77  0000                     _BSR	set	4064
    78  0000                     _WREG	set	4072
    79  0000                     _INTCONbits	set	4082
    80  0000                     _T2CONbits	set	4042
    81  0000                     _PR2	set	4043
    82  0000                     _CCP1CONbits	set	4029
    83  0000                     _PORTCbits	set	3970
    84  0000                     _TRISCbits	set	3988
    85  0000                     _PORTBbits	set	3969
    86  0000                     _TRISBbits	set	3987
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _TRISAbits	set	3986
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON0	set	4034
    93  0000                     _T0CONbits	set	4053
    94                           
    95                           ; #config settings
    96  0000                     
    97                           	psect	cinit
    98  000F2A                     __pcinit:
    99                           	opt stack 0
   100  000F2A                     start_initialization:
   101                           	opt stack 0
   102  000F2A                     __initialization:
   103                           	opt stack 0
   104                           
   105                           ; Clear objects allocated to BIGRAM (1312 bytes)
   106  000F2A  EE00  F0C4         	lfsr	0,__pbssBIGRAM
   107  000F2E  EE15 F020          	lfsr	1,1312
   108  000F32                     clear_0:
   109  000F32  6AEE               	clrf	postinc0,c
   110  000F34  50E5               	movf	postdec1,w,c
   111  000F36  50E1               	movf	fsr1l,w,c
   112  000F38  E1FC               	bnz	clear_0
   113  000F3A  50E2               	movf	fsr1h,w,c
   114  000F3C  E1FA               	bnz	clear_0
   115                           
   116                           ; Clear objects allocated to BANK0 (24 bytes)
   117  000F3E  EE00  F0AC         	lfsr	0,__pbssBANK0
   118  000F42  0E18               	movlw	24
   119  000F44                     clear_1:
   120  000F44  6AEE               	clrf	postinc0,c
   121  000F46  06E8               	decf	wreg,f,c
   122  000F48  E1FD               	bnz	clear_1
   123                           
   124                           ; Clear objects allocated to COMRAM (24 bytes)
   125  000F4A  EE00  F041         	lfsr	0,__pbssCOMRAM
   126  000F4E  0E18               	movlw	24
   127  000F50                     clear_2:
   128  000F50  6AEE               	clrf	postinc0,c
   129  000F52  06E8               	decf	wreg,f,c
   130  000F54  E1FD               	bnz	clear_2
   131  000F56                     end_of_initialization:
   132                           	opt stack 0
   133  000F56                     __end_of__initialization:
   134                           	opt stack 0
   135  000F56  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   136  000F58  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   137  000F5A  0100               	movlb	0
   138  000F5C  EF42  F007         	goto	_main	;jump to C main() function
   139                           postinc0	equ	0xFEE
   140                           wreg	equ	0xFE8
   141                           postdec1	equ	0xFE5
   142                           fsr1h	equ	0xFE2
   143                           fsr1l	equ	0xFE1
   144                           
   145                           	psect	bssCOMRAM
   146  000041                     __pbssCOMRAM:
   147                           	opt stack 0
   148  000041                     _DELAY_Queue:
   149                           	opt stack 0
   150  000041                     	ds	16
   151  000051                     _tasks_delay_queue:
   152                           	opt stack 0
   153  000051                     	ds	2
   154  000053                     _tasks_installed:
   155                           	opt stack 0
   156  000053                     	ds	2
   157  000055                     _task_running:
   158                           	opt stack 0
   159  000055                     	ds	2
   160  000057                     _ptr_speed:
   161                           	opt stack 0
   162  000057                     	ds	2
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           postdec1	equ	0xFE5
   166                           fsr1h	equ	0xFE2
   167                           fsr1l	equ	0xFE1
   168                           
   169                           	psect	bssBANK0
   170  0000AC                     __pbssBANK0:
   171                           	opt stack 0
   172  0000AC                     _ptr_shared_memory:
   173                           	opt stack 0
   174  0000AC                     	ds	2
   175  0000AE                     _shared_memory:
   176                           	opt stack 0
   177  0000AE                     	ds	22
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           postdec1	equ	0xFE5
   181                           fsr1h	equ	0xFE2
   182                           fsr1l	equ	0xFE1
   183                           
   184                           	psect	bssBIGRAM
   185  0000C4                     __pbssBIGRAM:
   186                           	opt stack 0
   187  0000C4                     _READY_Queue:
   188                           	opt stack 0
   189  0000C4                     	ds	800
   190  0003E4                     __uDynamicHeap:
   191                           	opt stack 0
   192  0003E4                     	ds	512
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           postdec1	equ	0xFE5
   196                           fsr1h	equ	0xFE2
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	cstackBANK0
   200  000080                     __pcstackBANK0:
   201                           	opt stack 0
   202  000080                     ?___ftmul:
   203                           	opt stack 0
   204  000080                     ___ftmul@f1:
   205                           	opt stack 0
   206                           
   207                           ; 3 bytes @ 0x0
   208  000080                     	ds	3
   209  000083                     ___ftmul@f2:
   210                           	opt stack 0
   211                           
   212                           ; 3 bytes @ 0x3
   213  000083                     	ds	3
   214  000086                     ??___ftmul:
   215                           
   216                           ; 1 bytes @ 0x6
   217  000086                     	ds	3
   218  000089                     ___ftmul@exp:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x9
   222  000089                     	ds	1
   223  00008A                     ___ftmul@f3_as_product:
   224                           	opt stack 0
   225                           
   226                           ; 3 bytes @ 0xA
   227  00008A                     	ds	3
   228  00008D                     ___ftmul@cntr:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xD
   232  00008D                     	ds	1
   233  00008E                     ___ftmul@sign:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0xE
   237  00008E                     	ds	1
   238  00008F                     ?___fttol:
   239                           	opt stack 0
   240  00008F                     ___fttol@f1:
   241                           	opt stack 0
   242                           
   243                           ; 3 bytes @ 0xF
   244  00008F                     	ds	4
   245  000093                     ??___fttol:
   246                           
   247                           ; 1 bytes @ 0x13
   248  000093                     	ds	5
   249  000098                     ___fttol@sign1:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x18
   253  000098                     	ds	1
   254  000099                     ___fttol@lval:
   255                           	opt stack 0
   256                           
   257                           ; 4 bytes @ 0x19
   258  000099                     	ds	4
   259  00009D                     ___fttol@exp1:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x1D
   263  00009D                     	ds	1
   264  00009E                     ??_tarefa_um:
   265                           
   266                           ; 1 bytes @ 0x1E
   267  00009E                     	ds	2
   268  0000A0                     tarefa_um@value:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0x20
   272  0000A0                     	ds	2
   273  0000A2                     tarefa_um@previousTemp:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x22
   277  0000A2                     	ds	2
   278  0000A4                     tarefa_um@currentTemp:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x24
   282  0000A4                     	ds	2
   283  0000A6                     tarefa_um@i:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x26
   287  0000A6                     	ds	2
   288  0000A8                     
   289                           ; 1 bytes @ 0x28
   290  0000A8                     	ds	2
   291  0000AA                     
   292                           ; 1 bytes @ 0x2A
   293  0000AA                     	ds	2
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1h	equ	0xFE2
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	cstackCOMRAM
   301  000001                     __pcstackCOMRAM:
   302                           	opt stack 0
   303  000001                     ?___wmul:
   304                           	opt stack 0
   305  000001                     ?___lwmod:
   306                           	opt stack 0
   307  000001                     ?i2___wmul:
   308                           	opt stack 0
   309  000001                     ___wmul@multiplier:
   310                           	opt stack 0
   311  000001                     ___lwmod@dividend:
   312                           	opt stack 0
   313  000001                     i2___wmul@multiplier:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x0
   317  000001                     	ds	2
   318  000003                     ___wmul@multiplicand:
   319                           	opt stack 0
   320  000003                     ___lwmod@divisor:
   321                           	opt stack 0
   322  000003                     i2___wmul@multiplicand:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x2
   326  000003                     	ds	2
   327  000005                     ___lwmod@counter:
   328                           	opt stack 0
   329  000005                     ___wmul@product:
   330                           	opt stack 0
   331  000005                     i2___wmul@product:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x4
   335  000005                     	ds	2
   336  000007                     ?_rr_scheduler:
   337                           	opt stack 0
   338  000007                     macos_create_task@id:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x6
   342  000007                     	ds	2
   343  000009                     macos_create_task@prior:
   344                           	opt stack 0
   345  000009                     rr_scheduler@i:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x8
   349  000009                     	ds	2
   350  00000B                     macos_create_task@t_ptr:
   351                           	opt stack 0
   352  00000B                     rr_scheduler@next_task:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0xA
   356  00000B                     	ds	2
   357  00000D                     ??_macos_create_task:
   358  00000D                     ??_despachante:
   359                           
   360                           ; 1 bytes @ 0xC
   361  00000D                     	ds	4
   362  000011                     
   363                           ; 1 bytes @ 0x10
   364  000011                     	ds	3
   365  000014                     despachante@STATE:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x13
   369  000014                     	ds	1
   370  000015                     despachante@pos_queue:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x14
   374  000015                     	ds	2
   375  000017                     despachante@pos_queue_742:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x16
   379  000017                     	ds	2
   380  000019                     ??_interrupt_handler:
   381                           
   382                           ; 1 bytes @ 0x18
   383  000019                     	ds	14
   384  000027                     ?___ftpack:
   385                           	opt stack 0
   386  000027                     ___ftpack@arg:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x26
   390  000027                     	ds	3
   391  00002A                     ___ftpack@exp:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x29
   395  00002A                     	ds	1
   396  00002B                     ___ftpack@sign:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x2A
   400  00002B                     	ds	1
   401  00002C                     ??___ftpack:
   402                           
   403                           ; 1 bytes @ 0x2B
   404  00002C                     	ds	3
   405  00002F                     ?___lwtoft:
   406                           	opt stack 0
   407  00002F                     ___lwtoft@c:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x2E
   411  00002F                     	ds	3
   412  000032                     ?___ftdiv:
   413                           	opt stack 0
   414  000032                     ___ftdiv@f1:
   415                           	opt stack 0
   416                           
   417                           ; 3 bytes @ 0x31
   418  000032                     	ds	3
   419  000035                     ___ftdiv@f2:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0x34
   423  000035                     	ds	3
   424  000038                     ??___ftdiv:
   425                           
   426                           ; 1 bytes @ 0x37
   427  000038                     	ds	3
   428  00003B                     ___ftdiv@cntr:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x3A
   432  00003B                     	ds	1
   433  00003C                     ___ftdiv@f3:
   434                           	opt stack 0
   435                           
   436                           ; 3 bytes @ 0x3B
   437  00003C                     	ds	3
   438  00003F                     ___ftdiv@exp:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x3E
   442  00003F                     	ds	1
   443  000040                     ___ftdiv@sign:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x3F
   447  000040                     	ds	1
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1h	equ	0xFE2
   452                           fsr1l	equ	0xFE1
   453                           
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 14 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  2   24[None  ] int 
   466 ;; Registers used:
   467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   473 ;;      Params:         0       0       0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels required when called:   10
   479 ;; This function calls:
   480 ;;		_macos_create_task
   481 ;;		_macos_start
   482 ;; This function is called by:
   483 ;;		Startup code after reset
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text0
   488  000E84                     __ptext0:
   489                           	opt stack 0
   490  000E84                     _main:
   491                           	opt stack 21
   492                           
   493                           ;main.c: 16: macos_start();
   494                           
   495                           ;incstack = 0
   496  000E84  ECB0  F007         	call	_macos_start	;wreg free
   497                           
   498                           ;main.c: 19: macos_create_task(1, 100, tarefa_um);
   499  000E88  0E00               	movlw	0
   500  000E8A  6E08               	movwf	macos_create_task@id+1,c
   501  000E8C  0E01               	movlw	1
   502  000E8E  6E07               	movwf	macos_create_task@id,c
   503  000E90  0E00               	movlw	0
   504  000E92  6E0A               	movwf	macos_create_task@prior+1,c
   505  000E94  0E64               	movlw	100
   506  000E96  6E09               	movwf	macos_create_task@prior,c
   507  000E98  0EB0               	movlw	low _tarefa_um
   508  000E9A  6E0B               	movwf	macos_create_task@t_ptr,c
   509  000E9C  0E06               	movlw	high _tarefa_um
   510  000E9E  6E0C               	movwf	macos_create_task@t_ptr+1,c
   511  000EA0  EC67  F002         	call	_macos_create_task	;wreg free
   512                           
   513                           ;main.c: 20: macos_create_task(2, 100, tarefa_dois);
   514  000EA4  0E00               	movlw	0
   515  000EA6  6E08               	movwf	macos_create_task@id+1,c
   516  000EA8  0E02               	movlw	2
   517  000EAA  6E07               	movwf	macos_create_task@id,c
   518  000EAC  0E00               	movlw	0
   519  000EAE  6E0A               	movwf	macos_create_task@prior+1,c
   520  000EB0  0E64               	movlw	100
   521  000EB2  6E09               	movwf	macos_create_task@prior,c
   522  000EB4  0E9E               	movlw	low _tarefa_dois
   523  000EB6  6E0B               	movwf	macos_create_task@t_ptr,c
   524  000EB8  0E0B               	movlw	high _tarefa_dois
   525  000EBA  6E0C               	movwf	macos_create_task@t_ptr+1,c
   526  000EBC  EC67  F002         	call	_macos_create_task	;wreg free
   527                           
   528                           ;main.c: 21: macos_create_task(3, 100, tarefa_tres);
   529  000EC0  0E00               	movlw	0
   530  000EC2  6E08               	movwf	macos_create_task@id+1,c
   531  000EC4  0E03               	movlw	3
   532  000EC6  6E07               	movwf	macos_create_task@id,c
   533  000EC8  0E00               	movlw	0
   534  000ECA  6E0A               	movwf	macos_create_task@prior+1,c
   535  000ECC  0E64               	movlw	100
   536  000ECE  6E09               	movwf	macos_create_task@prior,c
   537  000ED0  0EAE               	movlw	low _tarefa_tres
   538  000ED2  6E0B               	movwf	macos_create_task@t_ptr,c
   539  000ED4  0E0D               	movlw	high _tarefa_tres
   540  000ED6  6E0C               	movwf	macos_create_task@t_ptr+1,c
   541  000ED8  EC67  F002         	call	_macos_create_task	;wreg free
   542                           
   543                           ;main.c: 23: T0CONbits.TMR0ON = 1;
   544  000EDC  8ED5               	bsf	4053,7,c	;volatile
   545                           
   546                           ;main.c: 26: TMR0 = 59286;
   547  000EDE  0EE7               	movlw	231
   548  000EE0  6ED7               	movwf	4055,c	;volatile
   549  000EE2  0E96               	movlw	150
   550  000EE4  6ED6               	movwf	4054,c	;volatile
   551  000EE6                     l25:
   552  000EE6  D7FF               	goto	l25
   553  000EE8                     __end_of_main:
   554                           	opt stack 0
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           postdec1	equ	0xFE5
   558                           fsr1h	equ	0xFE2
   559                           fsr1l	equ	0xFE1
   560                           
   561 ;; *************** function _macos_start *****************
   562 ;; Defined at:
   563 ;;		line 61 in file "kernel.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         0       0       0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    9
   584 ;; This function calls:
   585 ;;		_macos_create_task
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text1
   592  000F60                     __ptext1:
   593                           	opt stack 0
   594  000F60                     _macos_start:
   595                           	opt stack 21
   596                           
   597                           ;kernel.c: 64: macos_create_task(0, 0, task_IDLE);
   598                           
   599                           ;incstack = 0
   600  000F60  0E00               	movlw	0
   601  000F62  6E08               	movwf	macos_create_task@id+1,c
   602  000F64  0E00               	movlw	0
   603  000F66  6E07               	movwf	macos_create_task@id,c
   604  000F68  0E00               	movlw	0
   605  000F6A  6E0A               	movwf	macos_create_task@prior+1,c
   606  000F6C  0E00               	movlw	0
   607  000F6E  6E09               	movwf	macos_create_task@prior,c
   608  000F70  0E04               	movlw	low _task_IDLE
   609  000F72  6E0B               	movwf	macos_create_task@t_ptr,c
   610  000F74  0E10               	movlw	high _task_IDLE
   611  000F76  6E0C               	movwf	macos_create_task@t_ptr+1,c
   612  000F78  EC67  F002         	call	_macos_create_task	;wreg free
   613                           
   614                           ;kernel.c: 67: T0CONbits.T0CS = 0;
   615  000F7C  9AD5               	bcf	4053,5,c	;volatile
   616                           
   617                           ;kernel.c: 68: T0CONbits.T08BIT = 0;
   618  000F7E  9CD5               	bcf	4053,6,c	;volatile
   619                           
   620                           ;kernel.c: 69: T0CONbits.PSA = 0;
   621  000F80  96D5               	bcf	4053,3,c	;volatile
   622                           
   623                           ;kernel.c: 70: T0CONbits.T0PS = 0b010;
   624  000F82  50D5               	movf	4053,w,c	;volatile
   625  000F84  0BF8               	andlw	-8
   626  000F86  0902               	iorlw	2
   627  000F88  6ED5               	movwf	4053,c	;volatile
   628                           
   629                           ;kernel.c: 71: INTCONbits.TMR0IE = 1;
   630  000F8A  8AF2               	bsf	intcon,5,c	;volatile
   631                           
   632                           ;kernel.c: 72: INTCONbits.TMR0IF = 0;
   633  000F8C  94F2               	bcf	intcon,2,c	;volatile
   634                           
   635                           ;kernel.c: 73: INTCONbits.PEIE = 1;
   636  000F8E  8CF2               	bsf	intcon,6,c	;volatile
   637                           
   638                           ;kernel.c: 74: INTCONbits.GIE = 1;
   639  000F90  8EF2               	bsf	intcon,7,c	;volatile
   640  000F92  0012               	return		;funcret
   641  000F94                     __end_of_macos_start:
   642                           	opt stack 0
   643                           intcon	equ	0xFF2
   644                           postinc0	equ	0xFEE
   645                           wreg	equ	0xFE8
   646                           postdec1	equ	0xFE5
   647                           fsr1h	equ	0xFE2
   648                           fsr1l	equ	0xFE1
   649                           
   650 ;; *************** function _macos_create_task *****************
   651 ;; Defined at:
   652 ;;		line 44 in file "kernel.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  id              2    6[COMRAM] unsigned int 
   655 ;;  prior           2    8[COMRAM] unsigned int 
   656 ;;  t_ptr           2   10[COMRAM] PTR FTN()void 
   657 ;;		 -> task_IDLE(1), tarefa_tres(1), tarefa_dois(1), tarefa_um(1), 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   669 ;;      Params:         6       0       0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0
   671 ;;      Temps:          4       0       0       0       0       0       0
   672 ;;      Totals:        10       0       0       0       0       0       0
   673 ;;Total ram usage:       10 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    8
   676 ;; This function calls:
   677 ;;		___wmul
   678 ;; This function is called by:
   679 ;;		_main
   680 ;;		_macos_start
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text2
   685  0004CE                     __ptext2:
   686                           	opt stack 0
   687  0004CE                     _macos_create_task:
   688                           	opt stack 21
   689                           
   690                           ;kernel.c: 47: READY_Queue[tasks_installed].task_id = id;
   691                           
   692                           ;incstack = 0
   693  0004CE  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   694  0004D2  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   695  0004D6  0E00               	movlw	0
   696  0004D8  6E04               	movwf	___wmul@multiplicand+1,c
   697  0004DA  0EC8               	movlw	200
   698  0004DC  6E03               	movwf	___wmul@multiplicand,c
   699  0004DE  ECCA  F007         	call	___wmul	;wreg free
   700  0004E2  0EC4               	movlw	low _READY_Queue
   701  0004E4  2401               	addwf	?___wmul,w,c
   702  0004E6  6ED9               	movwf	fsr2l,c
   703  0004E8  0E00               	movlw	high _READY_Queue
   704  0004EA  2002               	addwfc	?___wmul+1,w,c
   705  0004EC  6EDA               	movwf	fsr2h,c
   706  0004EE  C007  FFDE         	movff	macos_create_task@id,postinc2
   707  0004F2  C008  FFDD         	movff	macos_create_task@id+1,postdec2
   708                           
   709                           ;kernel.c: 48: READY_Queue[tasks_installed].task_state = READY;
   710  0004F6  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   711  0004FA  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   712  0004FE  0E00               	movlw	0
   713  000500  6E04               	movwf	___wmul@multiplicand+1,c
   714  000502  0EC8               	movlw	200
   715  000504  6E03               	movwf	___wmul@multiplicand,c
   716  000506  ECCA  F007         	call	___wmul	;wreg free
   717  00050A  0E02               	movlw	2
   718  00050C  2601               	addwf	?___wmul,f,c
   719  00050E  0E00               	movlw	0
   720  000510  2202               	addwfc	?___wmul+1,f,c
   721  000512  0EC4               	movlw	low _READY_Queue
   722  000514  2401               	addwf	?___wmul,w,c
   723  000516  6ED9               	movwf	fsr2l,c
   724  000518  0E00               	movlw	high _READY_Queue
   725  00051A  2002               	addwfc	?___wmul+1,w,c
   726  00051C  6EDA               	movwf	fsr2h,c
   727  00051E  0E00               	movlw	0
   728  000520  6EDF               	movwf	indf2,c
   729                           
   730                           ;kernel.c: 49: READY_Queue[tasks_installed].task_prior = prior;
   731  000522  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   732  000526  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   733  00052A  0E00               	movlw	0
   734  00052C  6E04               	movwf	___wmul@multiplicand+1,c
   735  00052E  0EC8               	movlw	200
   736  000530  6E03               	movwf	___wmul@multiplicand,c
   737  000532  ECCA  F007         	call	___wmul	;wreg free
   738  000536  0E03               	movlw	3
   739  000538  2601               	addwf	?___wmul,f,c
   740  00053A  0E00               	movlw	0
   741  00053C  2202               	addwfc	?___wmul+1,f,c
   742  00053E  0EC4               	movlw	low _READY_Queue
   743  000540  2401               	addwf	?___wmul,w,c
   744  000542  6ED9               	movwf	fsr2l,c
   745  000544  0E00               	movlw	high _READY_Queue
   746  000546  2002               	addwfc	?___wmul+1,w,c
   747  000548  6EDA               	movwf	fsr2h,c
   748  00054A  C009  FFDE         	movff	macos_create_task@prior,postinc2
   749  00054E  C00A  FFDD         	movff	macos_create_task@prior+1,postdec2
   750                           
   751                           ;kernel.c: 50: READY_Queue[tasks_installed].task_prior_count = prior;
   752  000552  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   753  000556  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   754  00055A  0E00               	movlw	0
   755  00055C  6E04               	movwf	___wmul@multiplicand+1,c
   756  00055E  0EC8               	movlw	200
   757  000560  6E03               	movwf	___wmul@multiplicand,c
   758  000562  ECCA  F007         	call	___wmul	;wreg free
   759  000566  0E05               	movlw	5
   760  000568  2601               	addwf	?___wmul,f,c
   761  00056A  0E00               	movlw	0
   762  00056C  2202               	addwfc	?___wmul+1,f,c
   763  00056E  0EC4               	movlw	low _READY_Queue
   764  000570  2401               	addwf	?___wmul,w,c
   765  000572  6ED9               	movwf	fsr2l,c
   766  000574  0E00               	movlw	high _READY_Queue
   767  000576  2002               	addwfc	?___wmul+1,w,c
   768  000578  6EDA               	movwf	fsr2h,c
   769  00057A  C009  FFDE         	movff	macos_create_task@prior,postinc2
   770  00057E  C00A  FFDD         	movff	macos_create_task@prior+1,postdec2
   771                           
   772                           ;kernel.c: 51: READY_Queue[tasks_installed].func = t_ptr;
   773  000582  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   774  000586  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   775  00058A  0E00               	movlw	0
   776  00058C  6E04               	movwf	___wmul@multiplicand+1,c
   777  00058E  0EC8               	movlw	200
   778  000590  6E03               	movwf	___wmul@multiplicand,c
   779  000592  ECCA  F007         	call	___wmul	;wreg free
   780  000596  0E07               	movlw	7
   781  000598  2601               	addwf	?___wmul,f,c
   782  00059A  0E00               	movlw	0
   783  00059C  2202               	addwfc	?___wmul+1,f,c
   784  00059E  0EC4               	movlw	low _READY_Queue
   785  0005A0  2401               	addwf	?___wmul,w,c
   786  0005A2  6ED9               	movwf	fsr2l,c
   787  0005A4  0E00               	movlw	high _READY_Queue
   788  0005A6  2002               	addwfc	?___wmul+1,w,c
   789  0005A8  6EDA               	movwf	fsr2h,c
   790  0005AA  C00B  FFDE         	movff	macos_create_task@t_ptr,postinc2
   791  0005AE  C00C  FFDD         	movff	macos_create_task@t_ptr+1,postdec2
   792                           
   793                           ;kernel.c: 52: READY_Queue[tasks_installed].ctx.task_stack[0].TOSU_reg = (uint32_t)t_ptr
      +                           >> 16;
   794  0005B2  500B               	movf	macos_create_task@t_ptr,w,c
   795  0005B4  6E0D               	movwf	??_macos_create_task& (0+255),c
   796  0005B6  500C               	movf	macos_create_task@t_ptr+1,w,c
   797  0005B8  6E0E               	movwf	(??_macos_create_task+1)& (0+255),c
   798  0005BA  6A0F               	clrf	(??_macos_create_task+2)& (0+255),c
   799  0005BC  6A10               	clrf	(??_macos_create_task+3)& (0+255),c
   800  0005BE  0E11               	movlw	17
   801  0005C0  D005               	goto	u740
   802  0005C2                     u745:
   803  0005C2  90D8               	bcf	status,0,c
   804  0005C4  3210               	rrcf	??_macos_create_task+3,f,c
   805  0005C6  320F               	rrcf	??_macos_create_task+2,f,c
   806  0005C8  320E               	rrcf	??_macos_create_task+1,f,c
   807  0005CA  320D               	rrcf	??_macos_create_task,f,c
   808  0005CC                     u740:
   809  0005CC  2EE8               	decfsz	wreg,f,c
   810  0005CE  D7F9               	goto	u745
   811  0005D0  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   812  0005D4  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   813  0005D8  0E00               	movlw	0
   814  0005DA  6E04               	movwf	___wmul@multiplicand+1,c
   815  0005DC  0EC8               	movlw	200
   816  0005DE  6E03               	movwf	___wmul@multiplicand,c
   817  0005E0  ECCA  F007         	call	___wmul	;wreg free
   818  0005E4  0E0C               	movlw	12
   819  0005E6  2601               	addwf	?___wmul,f,c
   820  0005E8  0E00               	movlw	0
   821  0005EA  2202               	addwfc	?___wmul+1,f,c
   822  0005EC  0EC4               	movlw	low _READY_Queue
   823  0005EE  2401               	addwf	?___wmul,w,c
   824  0005F0  6ED9               	movwf	fsr2l,c
   825  0005F2  0E00               	movlw	high _READY_Queue
   826  0005F4  2002               	addwfc	?___wmul+1,w,c
   827  0005F6  6EDA               	movwf	fsr2h,c
   828  0005F8  C00D  FFDE         	movff	??_macos_create_task,postinc2
   829  0005FC  C00E  FFDD         	movff	??_macos_create_task+1,postdec2
   830                           
   831                           ;kernel.c: 53: READY_Queue[tasks_installed].ctx.task_stack[0].TOSH_reg = (uint32_t)t_ptr
      +                           >> 8;
   832  000600  500B               	movf	macos_create_task@t_ptr,w,c
   833  000602  6E0D               	movwf	??_macos_create_task& (0+255),c
   834  000604  500C               	movf	macos_create_task@t_ptr+1,w,c
   835  000606  6E0E               	movwf	(??_macos_create_task+1)& (0+255),c
   836  000608  6A0F               	clrf	(??_macos_create_task+2)& (0+255),c
   837  00060A  6A10               	clrf	(??_macos_create_task+3)& (0+255),c
   838  00060C  C00E  F00D         	movff	??_macos_create_task+1,??_macos_create_task
   839  000610  C00F  F00E         	movff	??_macos_create_task+2,??_macos_create_task+1
   840  000614  C010  F00F         	movff	??_macos_create_task+3,??_macos_create_task+2
   841  000618  6A10               	clrf	??_macos_create_task+3,c
   842  00061A  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   843  00061E  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   844  000622  0E00               	movlw	0
   845  000624  6E04               	movwf	___wmul@multiplicand+1,c
   846  000626  0EC8               	movlw	200
   847  000628  6E03               	movwf	___wmul@multiplicand,c
   848  00062A  ECCA  F007         	call	___wmul	;wreg free
   849  00062E  0E0E               	movlw	14
   850  000630  2601               	addwf	?___wmul,f,c
   851  000632  0E00               	movlw	0
   852  000634  2202               	addwfc	?___wmul+1,f,c
   853  000636  0EC4               	movlw	low _READY_Queue
   854  000638  2401               	addwf	?___wmul,w,c
   855  00063A  6ED9               	movwf	fsr2l,c
   856  00063C  0E00               	movlw	high _READY_Queue
   857  00063E  2002               	addwfc	?___wmul+1,w,c
   858  000640  6EDA               	movwf	fsr2h,c
   859  000642  C00D  FFDE         	movff	??_macos_create_task,postinc2
   860  000646  C00E  FFDD         	movff	??_macos_create_task+1,postdec2
   861                           
   862                           ;kernel.c: 54: READY_Queue[tasks_installed].ctx.task_stack[0].TOSL_reg = (uint32_t)t_ptr
      +                           >> 0;
   863  00064A  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   864  00064E  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   865  000652  0E00               	movlw	0
   866  000654  6E04               	movwf	___wmul@multiplicand+1,c
   867  000656  0EC8               	movlw	200
   868  000658  6E03               	movwf	___wmul@multiplicand,c
   869  00065A  ECCA  F007         	call	___wmul	;wreg free
   870  00065E  0E10               	movlw	16
   871  000660  2601               	addwf	?___wmul,f,c
   872  000662  0E00               	movlw	0
   873  000664  2202               	addwfc	?___wmul+1,f,c
   874  000666  0EC4               	movlw	low _READY_Queue
   875  000668  2401               	addwf	?___wmul,w,c
   876  00066A  6ED9               	movwf	fsr2l,c
   877  00066C  0E00               	movlw	high _READY_Queue
   878  00066E  2002               	addwfc	?___wmul+1,w,c
   879  000670  6EDA               	movwf	fsr2h,c
   880  000672  C00B  FFDE         	movff	macos_create_task@t_ptr,postinc2
   881  000676  C00C  FFDD         	movff	macos_create_task@t_ptr+1,postdec2
   882                           
   883                           ;kernel.c: 55: READY_Queue[tasks_installed].ctx.task_stack_size = 1;
   884  00067A  C053  F001         	movff	_tasks_installed,___wmul@multiplier
   885  00067E  C054  F002         	movff	_tasks_installed+1,___wmul@multiplier+1
   886  000682  0E00               	movlw	0
   887  000684  6E04               	movwf	___wmul@multiplicand+1,c
   888  000686  0EC8               	movlw	200
   889  000688  6E03               	movwf	___wmul@multiplicand,c
   890  00068A  ECCA  F007         	call	___wmul	;wreg free
   891  00068E  0EC6               	movlw	198
   892  000690  2601               	addwf	?___wmul,f,c
   893  000692  0E00               	movlw	0
   894  000694  2202               	addwfc	?___wmul+1,f,c
   895  000696  0EC4               	movlw	low _READY_Queue
   896  000698  2401               	addwf	?___wmul,w,c
   897  00069A  6ED9               	movwf	fsr2l,c
   898  00069C  0E00               	movlw	high _READY_Queue
   899  00069E  2002               	addwfc	?___wmul+1,w,c
   900  0006A0  6EDA               	movwf	fsr2h,c
   901  0006A2  0E01               	movlw	1
   902  0006A4  6EDE               	movwf	postinc2,c
   903  0006A6  0E00               	movlw	0
   904  0006A8  6EDD               	movwf	postdec2,c
   905                           
   906                           ;kernel.c: 58: tasks_installed++;
   907  0006AA  4A53               	infsnz	_tasks_installed,f,c
   908  0006AC  2A54               	incf	_tasks_installed+1,f,c
   909  0006AE  0012               	return		;funcret
   910  0006B0                     __end_of_macos_create_task:
   911                           	opt stack 0
   912                           intcon	equ	0xFF2
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1h	equ	0xFE2
   917                           fsr1l	equ	0xFE1
   918                           indf2	equ	0xFDF
   919                           postinc2	equ	0xFDE
   920                           postdec2	equ	0xFDD
   921                           fsr2h	equ	0xFDA
   922                           fsr2l	equ	0xFD9
   923                           status	equ	0xFD8
   924                           
   925 ;; *************** function ___wmul *****************
   926 ;; Defined at:
   927 ;;		line 15 in file "D:\Programas\MPLABX\xc8\sources\common\Umul16.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  multiplier      2    0[COMRAM] unsigned int 
   930 ;;  multiplicand    2    2[COMRAM] unsigned int 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  product         2    4[COMRAM] unsigned int 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  2    0[COMRAM] unsigned int 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, prodl, prodh
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   942 ;;      Params:         4       0       0       0       0       0       0
   943 ;;      Locals:         2       0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0
   945 ;;      Totals:         6       0       0       0       0       0       0
   946 ;;Total ram usage:        6 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    7
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_macos_create_task
   953 ;;		_prior_scheduler
   954 ;;		_timer_delay
   955 ;;		_sem_wait
   956 ;;		_sem_post
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text3
   961  000F94                     __ptext3:
   962                           	opt stack 0
   963  000F94                     ___wmul:
   964                           	opt stack 21
   965                           
   966                           ;incstack = 0
   967  000F94  5001               	movf	___wmul@multiplier,w,c
   968  000F96  0203               	mulwf	___wmul@multiplicand,c
   969  000F98  CFF3 F005          	movff	prodl,___wmul@product
   970  000F9C  CFF4 F006          	movff	prodh,___wmul@product+1
   971  000FA0  5001               	movf	___wmul@multiplier,w,c
   972  000FA2  0204               	mulwf	___wmul@multiplicand+1,c
   973  000FA4  50F3               	movf	prodl,w,c
   974  000FA6  2606               	addwf	___wmul@product+1,f,c
   975  000FA8  5002               	movf	___wmul@multiplier+1,w,c
   976  000FAA  0203               	mulwf	___wmul@multiplicand,c
   977  000FAC  50F3               	movf	prodl,w,c
   978  000FAE  2606               	addwf	___wmul@product+1,f,c
   979  000FB0  C005  F001         	movff	___wmul@product,?___wmul
   980  000FB4  C006  F002         	movff	___wmul@product+1,?___wmul+1
   981  000FB8  0012               	return	
   982  000FBA                     __end_of___wmul:
   983                           	opt stack 0
   984                           prodh	equ	0xFF4
   985                           prodl	equ	0xFF3
   986                           intcon	equ	0xFF2
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1h	equ	0xFE2
   991                           fsr1l	equ	0xFE1
   992                           indf2	equ	0xFDF
   993                           postinc2	equ	0xFDE
   994                           postdec2	equ	0xFDD
   995                           fsr2h	equ	0xFDA
   996                           fsr2l	equ	0xFD9
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function _tarefa_um *****************
  1000 ;; Defined at:
  1001 ;;		line 12 in file "tasks.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  i               2   38[BANK0 ] unsigned int 
  1006 ;;  currentTemp     2   36[BANK0 ] unsigned int 
  1007 ;;  previousTemp    2   34[BANK0 ] unsigned int 
  1008 ;;  value           2   32[BANK0 ] unsigned int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1018 ;;      Params:         0       0       0       0       0       0       0
  1019 ;;      Locals:         0       8       0       0       0       0       0
  1020 ;;      Temps:          0       2       0       0       0       0       0
  1021 ;;      Totals:         0      10       0       0       0       0       0
  1022 ;;Total ram usage:       10 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    6
  1025 ;; This function calls:
  1026 ;;		___ftdiv
  1027 ;;		___ftmul
  1028 ;;		___fttol
  1029 ;;		___lwtoft
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text4
  1036  0006B0                     __ptext4:
  1037                           	opt stack 0
  1038  0006B0                     _tarefa_um:
  1039                           	opt stack 21
  1040                           
  1041                           ;tasks.c: 14: ADCON0 = 0b00000001;
  1042                           
  1043                           ;incstack = 0
  1044  0006B0  0E01               	movlw	1
  1045  0006B2  6EC2               	movwf	4034,c	;volatile
  1046                           
  1047                           ;tasks.c: 15: ADCON1 = 0b00001110;
  1048  0006B4  0E0E               	movlw	14
  1049  0006B6  6EC1               	movwf	4033,c	;volatile
  1050                           
  1051                           ;tasks.c: 16: ADCON2 = 0b00000100;
  1052  0006B8  0E04               	movlw	4
  1053  0006BA  6EC0               	movwf	4032,c	;volatile
  1054                           
  1055                           ;tasks.c: 18: u_int value, currentTemp, previousTemp=0, i=0;
  1056  0006BC  0E00               	movlw	0
  1057  0006BE  0100               	movlb	0	; () banked
  1058  0006C0  6FA3               	movwf	(tarefa_um@previousTemp+1)& (0+255),b
  1059  0006C2  0E00               	movlw	0
  1060  0006C4  6FA2               	movwf	tarefa_um@previousTemp& (0+255),b
  1061  0006C6  0E00               	movlw	0
  1062  0006C8  0100               	movlb	0	; () banked
  1063  0006CA  6FA7               	movwf	(tarefa_um@i+1)& (0+255),b
  1064  0006CC  0E00               	movlw	0
  1065  0006CE  6FA6               	movwf	tarefa_um@i& (0+255),b
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;tasks.c: 19: TRISAbits.RA0 = 1;
  1069  0006D0  8092               	bsf	3986,0,c	;volatile
  1070  0006D2                     l2047:
  1071                           
  1072                           ;tasks.c: 22: {
  1073                           ;tasks.c: 23: ADCON0bits.GO_NOT_DONE = 1;
  1074  0006D2  82C2               	bsf	4034,1,c	;volatile
  1075  0006D4                     l66:
  1076  0006D4  B2C2               	btfsc	4034,1,c	;volatile
  1077  0006D6  D7FE               	goto	l66
  1078                           
  1079                           ;tasks.c: 25: value = ADRESH & 0xff;
  1080  0006D8  CFC4 F0A0          	movff	4036,tarefa_um@value	;volatile
  1081  0006DC  0100               	movlb	0	; () banked
  1082  0006DE  6BA1               	clrf	(tarefa_um@value+1)& (0+255),b
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;tasks.c: 26: currentTemp = ((value/255.0) * 500);
  1086  0006E0  0E00               	movlw	0
  1087  0006E2  0100               	movlb	0	; () banked
  1088  0006E4  6F83               	movwf	___ftmul@f2& (0+255),b
  1089  0006E6  0EFA               	movlw	250
  1090  0006E8  0100               	movlb	0	; () banked
  1091  0006EA  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  1092  0006EC  0E43               	movlw	67
  1093  0006EE  0100               	movlb	0	; () banked
  1094  0006F0  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  1095  0006F2  0E00               	movlw	0
  1096  0006F4  6E35               	movwf	___ftdiv@f2,c
  1097  0006F6  0E7F               	movlw	127
  1098  0006F8  6E36               	movwf	___ftdiv@f2+1,c
  1099  0006FA  0E43               	movlw	67
  1100  0006FC  6E37               	movwf	___ftdiv@f2+2,c
  1101  0006FE  C0A0  F02F         	movff	tarefa_um@value,___lwtoft@c
  1102  000702  C0A1  F030         	movff	tarefa_um@value+1,___lwtoft@c+1
  1103  000706  ECF0  F007         	call	___lwtoft	;wreg free
  1104  00070A  C02F  F032         	movff	?___lwtoft,___ftdiv@f1
  1105  00070E  C030  F033         	movff	?___lwtoft+1,___ftdiv@f1+1
  1106  000712  C031  F034         	movff	?___lwtoft+2,___ftdiv@f1+2
  1107  000716  EC5C  F005         	call	___ftdiv	;wreg free
  1108  00071A  C032  F080         	movff	?___ftdiv,___ftmul@f1
  1109  00071E  C033  F081         	movff	?___ftdiv+1,___ftmul@f1+1
  1110  000722  C034  F082         	movff	?___ftdiv+2,___ftmul@f1+2
  1111  000726  EC0B  F004         	call	___ftmul	;wreg free
  1112  00072A  C080  F08F         	movff	?___ftmul,___fttol@f1
  1113  00072E  C081  F090         	movff	?___ftmul+1,___fttol@f1+1
  1114  000732  C082  F091         	movff	?___ftmul+2,___fttol@f1+2
  1115  000736  ECBA  F004         	call	___fttol	;wreg free
  1116  00073A  C08F  F0A4         	movff	?___fttol,tarefa_um@currentTemp
  1117  00073E  C090  F0A5         	movff	?___fttol+1,tarefa_um@currentTemp+1
  1118                           
  1119                           ;tasks.c: 28: if(i==10){
  1120  000742  0E0A               	movlw	10
  1121  000744  0100               	movlb	0	; () banked
  1122  000746  19A6               	xorwf	tarefa_um@i& (0+255),w,b
  1123  000748  0100               	movlb	0	; () banked
  1124  00074A  11A7               	iorwf	(tarefa_um@i+1)& (0+255),w,b
  1125  00074C  A4D8               	btfss	status,2,c
  1126  00074E  D005               	goto	l2055
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;tasks.c: 29: i=0;
  1130  000750  0E00               	movlw	0
  1131  000752  0100               	movlb	0	; () banked
  1132  000754  6FA7               	movwf	(tarefa_um@i+1)& (0+255),b
  1133  000756  0E00               	movlw	0
  1134  000758  6FA6               	movwf	tarefa_um@i& (0+255),b
  1135  00075A                     l2055:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;tasks.c: 30: }
  1139                           ;tasks.c: 31: if(i==0){
  1140  00075A  0100               	movlb	0	; () banked
  1141  00075C  51A6               	movf	tarefa_um@i& (0+255),w,b
  1142  00075E  0100               	movlb	0	; () banked
  1143  000760  11A7               	iorwf	(tarefa_um@i+1)& (0+255),w,b
  1144  000762  A4D8               	btfss	status,2,c
  1145  000764  D021               	goto	l2061
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;tasks.c: 32: shared_memory[i] = currentTemp;
  1149  000766  90D8               	bcf	status,0,c
  1150  000768  0100               	movlb	0	; () banked
  1151  00076A  35A6               	rlcf	tarefa_um@i& (0+255),w,b
  1152  00076C  6ED9               	movwf	fsr2l,c
  1153  00076E  0100               	movlb	0	; () banked
  1154  000770  35A7               	rlcf	(tarefa_um@i+1)& (0+255),w,b
  1155  000772  6EDA               	movwf	fsr2h,c
  1156  000774  0EAE               	movlw	low _shared_memory
  1157  000776  26D9               	addwf	fsr2l,f,c
  1158  000778  0E00               	movlw	high _shared_memory
  1159  00077A  22DA               	addwfc	fsr2h,f,c
  1160  00077C  C0A4  FFDE         	movff	tarefa_um@currentTemp,postinc2
  1161  000780  C0A5  FFDD         	movff	tarefa_um@currentTemp+1,postdec2
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;tasks.c: 33: ptr_shared_memory = &shared_memory[i];
  1165  000784  C0A6  F09E         	movff	tarefa_um@i,??_tarefa_um
  1166  000788  C0A7  F09F         	movff	tarefa_um@i+1,??_tarefa_um+1
  1167  00078C  90D8               	bcf	status,0,c
  1168  00078E  0100               	movlb	0	; () banked
  1169  000790  379E               	rlcf	??_tarefa_um& (0+255),f,b
  1170  000792  379F               	rlcf	(??_tarefa_um+1)& (0+255),f,b
  1171  000794  0EAE               	movlw	low _shared_memory
  1172  000796  0100               	movlb	0	; () banked
  1173  000798  259E               	addwf	??_tarefa_um& (0+255),w,b
  1174  00079A  0100               	movlb	0	; () banked
  1175  00079C  6FAC               	movwf	_ptr_shared_memory& (0+255),b
  1176  00079E  0E00               	movlw	high _shared_memory
  1177  0007A0  0100               	movlb	0	; () banked
  1178  0007A2  219F               	addwfc	(??_tarefa_um+1)& (0+255),w,b
  1179  0007A4  0100               	movlb	0	; () banked
  1180  0007A6  6FAD               	movwf	(_ptr_shared_memory+1)& (0+255),b
  1181  0007A8                     l2061:
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;tasks.c: 34: }
  1185                           ;tasks.c: 35: if(previousTemp != currentTemp){
  1186  0007A8  0100               	movlb	0	; () banked
  1187  0007AA  51A4               	movf	tarefa_um@currentTemp& (0+255),w,b
  1188  0007AC  0100               	movlb	0	; () banked
  1189  0007AE  19A2               	xorwf	tarefa_um@previousTemp& (0+255),w,b
  1190  0007B0  E106               	bnz	u159_20
  1191  0007B2  0100               	movlb	0	; () banked
  1192  0007B4  51A5               	movf	(tarefa_um@currentTemp+1)& (0+255),w,b
  1193  0007B6  0100               	movlb	0	; () banked
  1194  0007B8  19A3               	xorwf	(tarefa_um@previousTemp+1)& (0+255),w,b
  1195  0007BA  B4D8               	btfsc	status,2,c
  1196  0007BC  D028               	goto	l71
  1197  0007BE                     u159_20:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;tasks.c: 36: i++;
  1201  0007BE  0100               	movlb	0	; () banked
  1202  0007C0  4BA6               	infsnz	tarefa_um@i& (0+255),f,b
  1203  0007C2  2BA7               	incf	(tarefa_um@i+1)& (0+255),f,b
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;tasks.c: 37: shared_memory[i] = currentTemp;
  1207  0007C4  90D8               	bcf	status,0,c
  1208  0007C6  0100               	movlb	0	; () banked
  1209  0007C8  35A6               	rlcf	tarefa_um@i& (0+255),w,b
  1210  0007CA  6ED9               	movwf	fsr2l,c
  1211  0007CC  0100               	movlb	0	; () banked
  1212  0007CE  35A7               	rlcf	(tarefa_um@i+1)& (0+255),w,b
  1213  0007D0  6EDA               	movwf	fsr2h,c
  1214  0007D2  0EAE               	movlw	low _shared_memory
  1215  0007D4  26D9               	addwf	fsr2l,f,c
  1216  0007D6  0E00               	movlw	high _shared_memory
  1217  0007D8  22DA               	addwfc	fsr2h,f,c
  1218  0007DA  C0A4  FFDE         	movff	tarefa_um@currentTemp,postinc2
  1219  0007DE  C0A5  FFDD         	movff	tarefa_um@currentTemp+1,postdec2
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;tasks.c: 38: ptr_shared_memory = &shared_memory[i];
  1223  0007E2  C0A6  F09E         	movff	tarefa_um@i,??_tarefa_um
  1224  0007E6  C0A7  F09F         	movff	tarefa_um@i+1,??_tarefa_um+1
  1225  0007EA  90D8               	bcf	status,0,c
  1226  0007EC  0100               	movlb	0	; () banked
  1227  0007EE  379E               	rlcf	??_tarefa_um& (0+255),f,b
  1228  0007F0  379F               	rlcf	(??_tarefa_um+1)& (0+255),f,b
  1229  0007F2  0EAE               	movlw	low _shared_memory
  1230  0007F4  0100               	movlb	0	; () banked
  1231  0007F6  259E               	addwf	??_tarefa_um& (0+255),w,b
  1232  0007F8  0100               	movlb	0	; () banked
  1233  0007FA  6FAC               	movwf	_ptr_shared_memory& (0+255),b
  1234  0007FC  0E00               	movlw	high _shared_memory
  1235  0007FE  0100               	movlb	0	; () banked
  1236  000800  219F               	addwfc	(??_tarefa_um+1)& (0+255),w,b
  1237  000802  0100               	movlb	0	; () banked
  1238  000804  6FAD               	movwf	(_ptr_shared_memory+1)& (0+255),b
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;tasks.c: 39: previousTemp = currentTemp;
  1242  000806  C0A4  F0A2         	movff	tarefa_um@currentTemp,tarefa_um@previousTemp
  1243  00080A  C0A5  F0A3         	movff	tarefa_um@currentTemp+1,tarefa_um@previousTemp+1
  1244  00080E                     l71:
  1245                           
  1246                           ; BSR set to: 0
  1247  00080E  F000               	nop		;# 
  1248  000810  F000               	nop		;# 
  1249  000812  F000               	nop		;# 
  1250  000814  D75E               	goto	l2047
  1251  000816                     __end_of_tarefa_um:
  1252                           	opt stack 0
  1253                           prodh	equ	0xFF4
  1254                           prodl	equ	0xFF3
  1255                           intcon	equ	0xFF2
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1h	equ	0xFE2
  1260                           fsr1l	equ	0xFE1
  1261                           indf2	equ	0xFDF
  1262                           postinc2	equ	0xFDE
  1263                           postdec2	equ	0xFDD
  1264                           fsr2h	equ	0xFDA
  1265                           fsr2l	equ	0xFD9
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function ___lwtoft *****************
  1269 ;; Defined at:
  1270 ;;		line 28 in file "D:\Programas\MPLABX\xc8\sources\common\lwtoft.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  c               2   46[COMRAM] unsigned int 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  3   46[COMRAM] float 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1284 ;;      Params:         3       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0
  1287 ;;      Totals:         3       0       0       0       0       0       0
  1288 ;;Total ram usage:        3 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    5
  1291 ;; This function calls:
  1292 ;;		___ftpack
  1293 ;; This function is called by:
  1294 ;;		_tarefa_um
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text5
  1299  000FE0                     __ptext5:
  1300                           	opt stack 0
  1301  000FE0                     ___lwtoft:
  1302                           	opt stack 21
  1303                           
  1304                           ;incstack = 0
  1305  000FE0  C02F  F027         	movff	___lwtoft@c,___ftpack@arg
  1306  000FE4  C030  F028         	movff	___lwtoft@c+1,___ftpack@arg+1
  1307  000FE8  6A29               	clrf	___ftpack@arg+2,c
  1308  000FEA  0E8E               	movlw	142
  1309  000FEC  6E2A               	movwf	___ftpack@exp,c
  1310  000FEE  0E00               	movlw	0
  1311  000FF0  6E2B               	movwf	___ftpack@sign,c
  1312  000FF2  EC3A  F006         	call	___ftpack	;wreg free
  1313  000FF6  C027  F02F         	movff	?___ftpack,?___lwtoft
  1314  000FFA  C028  F030         	movff	?___ftpack+1,?___lwtoft+1
  1315  000FFE  C029  F031         	movff	?___ftpack+2,?___lwtoft+2
  1316  001002  0012               	return	
  1317  001004                     __end_of___lwtoft:
  1318                           	opt stack 0
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           intcon	equ	0xFF2
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           postdec1	equ	0xFE5
  1325                           fsr1h	equ	0xFE2
  1326                           fsr1l	equ	0xFE1
  1327                           indf2	equ	0xFDF
  1328                           postinc2	equ	0xFDE
  1329                           postdec2	equ	0xFDD
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function ___fttol *****************
  1335 ;; Defined at:
  1336 ;;		line 44 in file "D:\Programas\MPLABX\xc8\sources\common\fttol.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  f1              3   15[BANK0 ] float 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  lval            4   25[BANK0 ] unsigned long 
  1341 ;;  exp1            1   29[BANK0 ] unsigned char 
  1342 ;;  sign1           1   24[BANK0 ] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  4   15[BANK0 ] long 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1352 ;;      Params:         0       4       0       0       0       0       0
  1353 ;;      Locals:         0       6       0       0       0       0       0
  1354 ;;      Temps:          0       5       0       0       0       0       0
  1355 ;;      Totals:         0      15       0       0       0       0       0
  1356 ;;Total ram usage:       15 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    4
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_tarefa_um
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text6
  1367  000974                     __ptext6:
  1368                           	opt stack 0
  1369  000974                     ___fttol:
  1370                           	opt stack 22
  1371                           
  1372                           ;incstack = 0
  1373  000974  C091  F093         	movff	___fttol@f1+2,??___fttol
  1374  000978  0100               	movlb	0	; () banked
  1375  00097A  6B94               	clrf	(??___fttol+1)& (0+255),b
  1376  00097C  6B95               	clrf	(??___fttol+2)& (0+255),b
  1377  00097E  0100               	movlb	0	; () banked
  1378  000980  3590               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1379  000982  0100               	movlb	0	; () banked
  1380  000984  3793               	rlcf	??___fttol& (0+255),f,b
  1381  000986  E301               	bnc	u148_21
  1382  000988  8194               	bsf	(??___fttol+1)& (0+255),0,b
  1383  00098A                     u148_21:
  1384  00098A  0100               	movlb	0	; () banked
  1385  00098C  5193               	movf	??___fttol& (0+255),w,b
  1386  00098E  0100               	movlb	0	; () banked
  1387  000990  6F9D               	movwf	___fttol@exp1& (0+255),b
  1388  000992  0100               	movlb	0	; () banked
  1389  000994  519D               	movf	___fttol@exp1& (0+255),w,b
  1390  000996  A4D8               	btfss	status,2,c
  1391  000998  D00A               	goto	i1l1993
  1392                           
  1393                           ; BSR set to: 0
  1394  00099A  0E00               	movlw	0
  1395  00099C  0100               	movlb	0	; () banked
  1396  00099E  6F8F               	movwf	?___fttol& (0+255),b
  1397  0009A0  0E00               	movlw	0
  1398  0009A2  6F90               	movwf	(?___fttol+1)& (0+255),b
  1399  0009A4  0E00               	movlw	0
  1400  0009A6  6F91               	movwf	(?___fttol+2)& (0+255),b
  1401  0009A8  0E00               	movlw	0
  1402  0009AA  6F92               	movwf	(?___fttol+3)& (0+255),b
  1403                           
  1404                           ; BSR set to: 0
  1405  0009AC  0012               	return	
  1406  0009AE                     i1l1993:
  1407                           
  1408                           ; BSR set to: 0
  1409  0009AE  0E17               	movlw	23
  1410  0009B0  0100               	movlb	0	; () banked
  1411  0009B2  6F93               	movwf	??___fttol& (0+255),b
  1412  0009B4  C08F  F094         	movff	___fttol@f1,??___fttol+1
  1413  0009B8  C090  F095         	movff	___fttol@f1+1,??___fttol+2
  1414  0009BC  C091  F096         	movff	___fttol@f1+2,??___fttol+3
  1415  0009C0  0100               	movlb	0	; () banked
  1416  0009C2  2993               	incf	??___fttol& (0+255),w,b
  1417  0009C4  0100               	movlb	0	; () banked
  1418  0009C6  6F97               	movwf	(??___fttol+4)& (0+255),b
  1419  0009C8  D005               	goto	i1u150_20
  1420  0009CA                     i1u150_25:
  1421  0009CA  0100               	movlb	0	; () banked
  1422  0009CC  90D8               	bcf	status,0,c
  1423  0009CE  3396               	rrcf	(??___fttol+3)& (0+255),f,b
  1424  0009D0  3395               	rrcf	(??___fttol+2)& (0+255),f,b
  1425  0009D2  3394               	rrcf	(??___fttol+1)& (0+255),f,b
  1426  0009D4                     i1u150_20:
  1427  0009D4  0100               	movlb	0	; () banked
  1428  0009D6  2F97               	decfsz	(??___fttol+4)& (0+255),f,b
  1429  0009D8  D7F8               	goto	i1u150_25
  1430  0009DA  0100               	movlb	0	; () banked
  1431  0009DC  5194               	movf	(??___fttol+1)& (0+255),w,b
  1432  0009DE  0100               	movlb	0	; () banked
  1433  0009E0  6F98               	movwf	___fttol@sign1& (0+255),b
  1434                           
  1435                           ; BSR set to: 0
  1436  0009E2  0100               	movlb	0	; () banked
  1437  0009E4  8F90               	bsf	(___fttol@f1+1)& (0+255),7,b
  1438                           
  1439                           ; BSR set to: 0
  1440  0009E6  0EFF               	movlw	255
  1441  0009E8  0100               	movlb	0	; () banked
  1442  0009EA  178F               	andwf	___fttol@f1& (0+255),f,b
  1443  0009EC  0EFF               	movlw	255
  1444  0009EE  0100               	movlb	0	; () banked
  1445  0009F0  1790               	andwf	(___fttol@f1+1)& (0+255),f,b
  1446  0009F2  0E00               	movlw	0
  1447  0009F4  0100               	movlb	0	; () banked
  1448  0009F6  1791               	andwf	(___fttol@f1+2)& (0+255),f,b
  1449                           
  1450                           ; BSR set to: 0
  1451  0009F8  0100               	movlb	0	; () banked
  1452  0009FA  518F               	movf	___fttol@f1& (0+255),w,b
  1453  0009FC  0100               	movlb	0	; () banked
  1454  0009FE  6F99               	movwf	___fttol@lval& (0+255),b
  1455  000A00  0100               	movlb	0	; () banked
  1456  000A02  5190               	movf	(___fttol@f1+1)& (0+255),w,b
  1457  000A04  0100               	movlb	0	; () banked
  1458  000A06  6F9A               	movwf	(___fttol@lval+1)& (0+255),b
  1459  000A08  0100               	movlb	0	; () banked
  1460  000A0A  5191               	movf	(___fttol@f1+2)& (0+255),w,b
  1461  000A0C  0100               	movlb	0	; () banked
  1462  000A0E  6F9B               	movwf	(___fttol@lval+2)& (0+255),b
  1463  000A10  0100               	movlb	0	; () banked
  1464  000A12  6B9C               	clrf	(___fttol@lval+3)& (0+255),b
  1465                           
  1466                           ; BSR set to: 0
  1467  000A14  0E8E               	movlw	142
  1468  000A16  0100               	movlb	0	; () banked
  1469  000A18  5F9D               	subwf	___fttol@exp1& (0+255),f,b
  1470                           
  1471                           ; BSR set to: 0
  1472  000A1A  0100               	movlb	0	; () banked
  1473  000A1C  AF9D               	btfss	___fttol@exp1& (0+255),7,b
  1474  000A1E  D01A               	goto	i1l2015
  1475                           
  1476                           ; BSR set to: 0
  1477  000A20  0100               	movlb	0	; () banked
  1478  000A22  519D               	movf	___fttol@exp1& (0+255),w,b
  1479  000A24  0A80               	xorlw	128
  1480  000A26  0F8F               	addlw	143
  1481  000A28  B0D8               	btfsc	status,0,c
  1482  000A2A  D00A               	goto	i1l2011
  1483                           
  1484                           ; BSR set to: 0
  1485  000A2C  0E00               	movlw	0
  1486  000A2E  0100               	movlb	0	; () banked
  1487  000A30  6F8F               	movwf	?___fttol& (0+255),b
  1488  000A32  0E00               	movlw	0
  1489  000A34  6F90               	movwf	(?___fttol+1)& (0+255),b
  1490  000A36  0E00               	movlw	0
  1491  000A38  6F91               	movwf	(?___fttol+2)& (0+255),b
  1492  000A3A  0E00               	movlw	0
  1493  000A3C  6F92               	movwf	(?___fttol+3)& (0+255),b
  1494                           
  1495                           ; BSR set to: 0
  1496  000A3E  0012               	return	
  1497  000A40                     i1l2011:
  1498                           
  1499                           ; BSR set to: 0
  1500  000A40  0100               	movlb	0	; () banked
  1501  000A42  90D8               	bcf	status,0,c
  1502  000A44  339C               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1503  000A46  339B               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1504  000A48  339A               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1505  000A4A  3399               	rrcf	___fttol@lval& (0+255),f,b
  1506                           
  1507                           ; BSR set to: 0
  1508  000A4C  0100               	movlb	0	; () banked
  1509  000A4E  3F9D               	incfsz	___fttol@exp1& (0+255),f,b
  1510  000A50  D7F7               	goto	i1l2011
  1511                           
  1512                           ; BSR set to: 0
  1513  000A52  D01B               	goto	i1l2025
  1514  000A54                     i1l2015:
  1515                           
  1516                           ; BSR set to: 0
  1517  000A54  0E17               	movlw	23
  1518  000A56  0100               	movlb	0	; () banked
  1519  000A58  659D               	cpfsgt	___fttol@exp1& (0+255),b
  1520  000A5A  D012               	goto	i1l2023
  1521                           
  1522                           ; BSR set to: 0
  1523  000A5C  0E00               	movlw	0
  1524  000A5E  0100               	movlb	0	; () banked
  1525  000A60  6F8F               	movwf	?___fttol& (0+255),b
  1526  000A62  0E00               	movlw	0
  1527  000A64  6F90               	movwf	(?___fttol+1)& (0+255),b
  1528  000A66  0E00               	movlw	0
  1529  000A68  6F91               	movwf	(?___fttol+2)& (0+255),b
  1530  000A6A  0E00               	movlw	0
  1531  000A6C  6F92               	movwf	(?___fttol+3)& (0+255),b
  1532                           
  1533                           ; BSR set to: 0
  1534  000A6E  0012               	return	
  1535  000A70                     i1l2021:
  1536                           
  1537                           ; BSR set to: 0
  1538  000A70  0100               	movlb	0	; () banked
  1539  000A72  90D8               	bcf	status,0,c
  1540  000A74  3799               	rlcf	___fttol@lval& (0+255),f,b
  1541  000A76  379A               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1542  000A78  379B               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1543  000A7A  379C               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1544  000A7C  0100               	movlb	0	; () banked
  1545  000A7E  079D               	decf	___fttol@exp1& (0+255),f,b
  1546  000A80                     i1l2023:
  1547                           
  1548                           ; BSR set to: 0
  1549  000A80  0100               	movlb	0	; () banked
  1550  000A82  519D               	movf	___fttol@exp1& (0+255),w,b
  1551  000A84  0100               	movlb	0	; () banked
  1552  000A86  A4D8               	btfss	status,2,c
  1553  000A88  D7F3               	goto	i1l2021
  1554  000A8A                     i1l2025:
  1555                           
  1556                           ; BSR set to: 0
  1557  000A8A  0100               	movlb	0	; () banked
  1558  000A8C  5198               	movf	___fttol@sign1& (0+255),w,b
  1559  000A8E  0100               	movlb	0	; () banked
  1560  000A90  B4D8               	btfsc	status,2,c
  1561  000A92  D009               	goto	i1l2029
  1562                           
  1563                           ; BSR set to: 0
  1564  000A94  0100               	movlb	0	; () banked
  1565  000A96  1F9C               	comf	(___fttol@lval+3)& (0+255),f,b
  1566  000A98  1F9B               	comf	(___fttol@lval+2)& (0+255),f,b
  1567  000A9A  1F9A               	comf	(___fttol@lval+1)& (0+255),f,b
  1568  000A9C  6D99               	negf	___fttol@lval& (0+255),b
  1569  000A9E  0E00               	movlw	0
  1570  000AA0  239A               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1571  000AA2  239B               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1572  000AA4  239C               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1573  000AA6                     i1l2029:
  1574                           
  1575                           ; BSR set to: 0
  1576  000AA6  C099  F08F         	movff	___fttol@lval,?___fttol
  1577  000AAA  C09A  F090         	movff	___fttol@lval+1,?___fttol+1
  1578  000AAE  C09B  F091         	movff	___fttol@lval+2,?___fttol+2
  1579  000AB2  C09C  F092         	movff	___fttol@lval+3,?___fttol+3
  1580  000AB6  0012               	return	
  1581  000AB8                     __end_of___fttol:
  1582                           	opt stack 0
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           intcon	equ	0xFF2
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           indf2	equ	0xFDF
  1592                           postinc2	equ	0xFDE
  1593                           postdec2	equ	0xFDD
  1594                           fsr2h	equ	0xFDA
  1595                           fsr2l	equ	0xFD9
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function ___ftmul *****************
  1599 ;; Defined at:
  1600 ;;		line 62 in file "D:\Programas\MPLABX\xc8\sources\common\ftmul.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  f1              3    0[BANK0 ] float 
  1603 ;;  f2              3    3[BANK0 ] float 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  f3_as_produc    3   10[BANK0 ] unsigned um
  1606 ;;  sign            1   14[BANK0 ] unsigned char 
  1607 ;;  cntr            1   13[BANK0 ] unsigned char 
  1608 ;;  exp             1    9[BANK0 ] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  3    0[BANK0 ] float 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         0       6       0       0       0       0       0
  1619 ;;      Locals:         0       6       0       0       0       0       0
  1620 ;;      Temps:          0       3       0       0       0       0       0
  1621 ;;      Totals:         0      15       0       0       0       0       0
  1622 ;;Total ram usage:       15 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    5
  1625 ;; This function calls:
  1626 ;;		___ftpack
  1627 ;; This function is called by:
  1628 ;;		_tarefa_um
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text7
  1633  000816                     __ptext7:
  1634                           	opt stack 0
  1635  000816                     ___ftmul:
  1636                           	opt stack 21
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;incstack = 0
  1640  000816  C082  F086         	movff	___ftmul@f1+2,??___ftmul
  1641  00081A  0100               	movlb	0	; () banked
  1642  00081C  6B87               	clrf	(??___ftmul+1)& (0+255),b
  1643  00081E  6B88               	clrf	(??___ftmul+2)& (0+255),b
  1644  000820  0100               	movlb	0	; () banked
  1645  000822  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1646  000824  0100               	movlb	0	; () banked
  1647  000826  3786               	rlcf	??___ftmul& (0+255),f,b
  1648  000828  E301               	bnc	u142_21
  1649  00082A  8187               	bsf	(??___ftmul+1)& (0+255),0,b
  1650  00082C                     u142_21:
  1651  00082C  0100               	movlb	0	; () banked
  1652  00082E  5186               	movf	??___ftmul& (0+255),w,b
  1653  000830  0100               	movlb	0	; () banked
  1654  000832  6F89               	movwf	___ftmul@exp& (0+255),b
  1655  000834  0100               	movlb	0	; () banked
  1656  000836  5189               	movf	___ftmul@exp& (0+255),w,b
  1657  000838  A4D8               	btfss	status,2,c
  1658  00083A  D00A               	goto	i1l1945
  1659                           
  1660                           ; BSR set to: 0
  1661  00083C  0E00               	movlw	0
  1662  00083E  0100               	movlb	0	; () banked
  1663  000840  6F80               	movwf	?___ftmul& (0+255),b
  1664  000842  0E00               	movlw	0
  1665  000844  0100               	movlb	0	; () banked
  1666  000846  6F81               	movwf	(?___ftmul+1)& (0+255),b
  1667  000848  0E00               	movlw	0
  1668  00084A  0100               	movlb	0	; () banked
  1669  00084C  6F82               	movwf	(?___ftmul+2)& (0+255),b
  1670                           
  1671                           ; BSR set to: 0
  1672  00084E  0012               	return	
  1673  000850                     i1l1945:
  1674                           
  1675                           ; BSR set to: 0
  1676  000850  C085  F086         	movff	___ftmul@f2+2,??___ftmul
  1677  000854  0100               	movlb	0	; () banked
  1678  000856  6B87               	clrf	(??___ftmul+1)& (0+255),b
  1679  000858  6B88               	clrf	(??___ftmul+2)& (0+255),b
  1680  00085A  0100               	movlb	0	; () banked
  1681  00085C  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1682  00085E  0100               	movlb	0	; () banked
  1683  000860  3786               	rlcf	??___ftmul& (0+255),f,b
  1684  000862  E301               	bnc	u144_21
  1685  000864  8187               	bsf	(??___ftmul+1)& (0+255),0,b
  1686  000866                     u144_21:
  1687  000866  0100               	movlb	0	; () banked
  1688  000868  5186               	movf	??___ftmul& (0+255),w,b
  1689  00086A  0100               	movlb	0	; () banked
  1690  00086C  6F8E               	movwf	___ftmul@sign& (0+255),b
  1691  00086E  0100               	movlb	0	; () banked
  1692  000870  518E               	movf	___ftmul@sign& (0+255),w,b
  1693  000872  A4D8               	btfss	status,2,c
  1694  000874  D00A               	goto	i1l1951
  1695                           
  1696                           ; BSR set to: 0
  1697  000876  0E00               	movlw	0
  1698  000878  0100               	movlb	0	; () banked
  1699  00087A  6F80               	movwf	?___ftmul& (0+255),b
  1700  00087C  0E00               	movlw	0
  1701  00087E  0100               	movlb	0	; () banked
  1702  000880  6F81               	movwf	(?___ftmul+1)& (0+255),b
  1703  000882  0E00               	movlw	0
  1704  000884  0100               	movlb	0	; () banked
  1705  000886  6F82               	movwf	(?___ftmul+2)& (0+255),b
  1706                           
  1707                           ; BSR set to: 0
  1708  000888  0012               	return	
  1709  00088A                     i1l1951:
  1710                           
  1711                           ; BSR set to: 0
  1712  00088A  0100               	movlb	0	; () banked
  1713  00088C  518E               	movf	___ftmul@sign& (0+255),w,b
  1714  00088E  0F7B               	addlw	123
  1715  000890  0100               	movlb	0	; () banked
  1716  000892  2789               	addwf	___ftmul@exp& (0+255),f,b
  1717                           
  1718                           ; BSR set to: 0
  1719  000894  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
  1720  000898  0100               	movlb	0	; () banked
  1721  00089A  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
  1722  00089C  0100               	movlb	0	; () banked
  1723  00089E  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
  1724  0008A0  0E80               	movlw	128
  1725  0008A2  0100               	movlb	0	; () banked
  1726  0008A4  178E               	andwf	___ftmul@sign& (0+255),f,b
  1727                           
  1728                           ; BSR set to: 0
  1729  0008A6  0100               	movlb	0	; () banked
  1730  0008A8  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
  1731                           
  1732                           ; BSR set to: 0
  1733  0008AA  0100               	movlb	0	; () banked
  1734  0008AC  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
  1735                           
  1736                           ; BSR set to: 0
  1737  0008AE  0EFF               	movlw	255
  1738  0008B0  0100               	movlb	0	; () banked
  1739  0008B2  1783               	andwf	___ftmul@f2& (0+255),f,b
  1740  0008B4  0EFF               	movlw	255
  1741  0008B6  0100               	movlb	0	; () banked
  1742  0008B8  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
  1743  0008BA  0E00               	movlw	0
  1744  0008BC  0100               	movlb	0	; () banked
  1745  0008BE  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
  1746                           
  1747                           ; BSR set to: 0
  1748  0008C0  0E00               	movlw	0
  1749  0008C2  0100               	movlb	0	; () banked
  1750  0008C4  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
  1751  0008C6  0E00               	movlw	0
  1752  0008C8  0100               	movlb	0	; () banked
  1753  0008CA  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1754  0008CC  0E00               	movlw	0
  1755  0008CE  0100               	movlb	0	; () banked
  1756  0008D0  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1757                           
  1758                           ; BSR set to: 0
  1759  0008D2  0E07               	movlw	7
  1760  0008D4  0100               	movlb	0	; () banked
  1761  0008D6  6F8D               	movwf	___ftmul@cntr& (0+255),b
  1762  0008D8                     i1l1965:
  1763                           
  1764                           ; BSR set to: 0
  1765  0008D8  0100               	movlb	0	; () banked
  1766  0008DA  A180               	btfss	___ftmul@f1& (0+255),0,b
  1767  0008DC  D00C               	goto	i1l1969
  1768                           
  1769                           ; BSR set to: 0
  1770  0008DE  0100               	movlb	0	; () banked
  1771  0008E0  5183               	movf	___ftmul@f2& (0+255),w,b
  1772  0008E2  0100               	movlb	0	; () banked
  1773  0008E4  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1774  0008E6  0100               	movlb	0	; () banked
  1775  0008E8  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
  1776  0008EA  0100               	movlb	0	; () banked
  1777  0008EC  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1778  0008EE  0100               	movlb	0	; () banked
  1779  0008F0  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
  1780  0008F2  0100               	movlb	0	; () banked
  1781  0008F4  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1782  0008F6                     i1l1969:
  1783                           
  1784                           ; BSR set to: 0
  1785  0008F6  0100               	movlb	0	; () banked
  1786  0008F8  90D8               	bcf	status,0,c
  1787  0008FA  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1788  0008FC  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1789  0008FE  3380               	rrcf	___ftmul@f1& (0+255),f,b
  1790  000900  0100               	movlb	0	; () banked
  1791  000902  90D8               	bcf	status,0,c
  1792  000904  3783               	rlcf	___ftmul@f2& (0+255),f,b
  1793  000906  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  1794  000908  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  1795                           
  1796                           ; BSR set to: 0
  1797  00090A  0100               	movlb	0	; () banked
  1798  00090C  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
  1799  00090E  D7E4               	goto	i1l1965
  1800                           
  1801                           ; BSR set to: 0
  1802                           
  1803                           ; BSR set to: 0
  1804  000910  0E09               	movlw	9
  1805  000912  0100               	movlb	0	; () banked
  1806  000914  6F8D               	movwf	___ftmul@cntr& (0+255),b
  1807  000916                     i1l1975:
  1808                           
  1809                           ; BSR set to: 0
  1810  000916  0100               	movlb	0	; () banked
  1811  000918  A180               	btfss	___ftmul@f1& (0+255),0,b
  1812  00091A  D00C               	goto	i1l1979
  1813                           
  1814                           ; BSR set to: 0
  1815  00091C  0100               	movlb	0	; () banked
  1816  00091E  5183               	movf	___ftmul@f2& (0+255),w,b
  1817  000920  0100               	movlb	0	; () banked
  1818  000922  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1819  000924  0100               	movlb	0	; () banked
  1820  000926  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
  1821  000928  0100               	movlb	0	; () banked
  1822  00092A  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1823  00092C  0100               	movlb	0	; () banked
  1824  00092E  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
  1825  000930  0100               	movlb	0	; () banked
  1826  000932  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1827  000934                     i1l1979:
  1828                           
  1829                           ; BSR set to: 0
  1830  000934  0100               	movlb	0	; () banked
  1831  000936  90D8               	bcf	status,0,c
  1832  000938  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1833  00093A  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1834  00093C  3380               	rrcf	___ftmul@f1& (0+255),f,b
  1835  00093E  0100               	movlb	0	; () banked
  1836  000940  90D8               	bcf	status,0,c
  1837  000942  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1838  000944  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1839  000946  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1840                           
  1841                           ; BSR set to: 0
  1842  000948  0100               	movlb	0	; () banked
  1843  00094A  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
  1844  00094C  D7E4               	goto	i1l1975
  1845                           
  1846                           ; BSR set to: 0
  1847                           
  1848                           ; BSR set to: 0
  1849  00094E  C08A  F027         	movff	___ftmul@f3_as_product,___ftpack@arg
  1850  000952  C08B  F028         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1851  000956  C08C  F029         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1852  00095A  C089  F02A         	movff	___ftmul@exp,___ftpack@exp
  1853  00095E  C08E  F02B         	movff	___ftmul@sign,___ftpack@sign
  1854  000962  EC3A  F006         	call	___ftpack	;wreg free
  1855  000966  C027  F080         	movff	?___ftpack,?___ftmul
  1856  00096A  C028  F081         	movff	?___ftpack+1,?___ftmul+1
  1857  00096E  C029  F082         	movff	?___ftpack+2,?___ftmul+2
  1858  000972  0012               	return	
  1859  000974                     __end_of___ftmul:
  1860                           	opt stack 0
  1861                           prodh	equ	0xFF4
  1862                           prodl	equ	0xFF3
  1863                           intcon	equ	0xFF2
  1864                           postinc0	equ	0xFEE
  1865                           wreg	equ	0xFE8
  1866                           postdec1	equ	0xFE5
  1867                           fsr1h	equ	0xFE2
  1868                           fsr1l	equ	0xFE1
  1869                           indf2	equ	0xFDF
  1870                           postinc2	equ	0xFDE
  1871                           postdec2	equ	0xFDD
  1872                           fsr2h	equ	0xFDA
  1873                           fsr2l	equ	0xFD9
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function ___ftdiv *****************
  1877 ;; Defined at:
  1878 ;;		line 54 in file "D:\Programas\MPLABX\xc8\sources\common\ftdiv.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  f1              3   49[COMRAM] float 
  1881 ;;  f2              3   52[COMRAM] float 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  f3              3   59[COMRAM] float 
  1884 ;;  sign            1   63[COMRAM] unsigned char 
  1885 ;;  exp             1   62[COMRAM] unsigned char 
  1886 ;;  cntr            1   58[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  3   49[COMRAM] float 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         6       0       0       0       0       0       0
  1897 ;;      Locals:         6       0       0       0       0       0       0
  1898 ;;      Temps:          3       0       0       0       0       0       0
  1899 ;;      Totals:        15       0       0       0       0       0       0
  1900 ;;Total ram usage:       15 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    5
  1903 ;; This function calls:
  1904 ;;		___ftpack
  1905 ;; This function is called by:
  1906 ;;		_tarefa_um
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text8
  1911  000AB8                     __ptext8:
  1912                           	opt stack 0
  1913  000AB8                     ___ftdiv:
  1914                           	opt stack 21
  1915                           
  1916                           ;incstack = 0
  1917  000AB8  C034  F038         	movff	___ftdiv@f1+2,??___ftdiv
  1918  000ABC  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  1919  000ABE  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  1920  000AC0  3433               	rlcf	___ftdiv@f1+1,w,c
  1921  000AC2  3638               	rlcf	??___ftdiv& (0+255),f,c
  1922  000AC4  E301               	bnc	u137_21
  1923  000AC6  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  1924  000AC8                     u137_21:
  1925  000AC8  5038               	movf	??___ftdiv,w,c
  1926  000ACA  6E3F               	movwf	___ftdiv@exp,c
  1927  000ACC  503F               	movf	___ftdiv@exp,w,c
  1928  000ACE  A4D8               	btfss	status,2,c
  1929  000AD0  D007               	goto	i1l1899
  1930  000AD2  0E00               	movlw	0
  1931  000AD4  6E32               	movwf	?___ftdiv,c
  1932  000AD6  0E00               	movlw	0
  1933  000AD8  6E33               	movwf	?___ftdiv+1,c
  1934  000ADA  0E00               	movlw	0
  1935  000ADC  6E34               	movwf	?___ftdiv+2,c
  1936  000ADE  0012               	return	
  1937  000AE0                     i1l1899:
  1938  000AE0  C037  F038         	movff	___ftdiv@f2+2,??___ftdiv
  1939  000AE4  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  1940  000AE6  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  1941  000AE8  3436               	rlcf	___ftdiv@f2+1,w,c
  1942  000AEA  3638               	rlcf	??___ftdiv& (0+255),f,c
  1943  000AEC  E301               	bnc	u139_21
  1944  000AEE  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  1945  000AF0                     u139_21:
  1946  000AF0  5038               	movf	??___ftdiv,w,c
  1947  000AF2  6E40               	movwf	___ftdiv@sign,c
  1948  000AF4  5040               	movf	___ftdiv@sign,w,c
  1949  000AF6  A4D8               	btfss	status,2,c
  1950  000AF8  D007               	goto	i1l1905
  1951  000AFA  0E00               	movlw	0
  1952  000AFC  6E32               	movwf	?___ftdiv,c
  1953  000AFE  0E00               	movlw	0
  1954  000B00  6E33               	movwf	?___ftdiv+1,c
  1955  000B02  0E00               	movlw	0
  1956  000B04  6E34               	movwf	?___ftdiv+2,c
  1957  000B06  0012               	return	
  1958  000B08                     i1l1905:
  1959  000B08  0E00               	movlw	0
  1960  000B0A  6E3C               	movwf	___ftdiv@f3,c
  1961  000B0C  0E00               	movlw	0
  1962  000B0E  6E3D               	movwf	___ftdiv@f3+1,c
  1963  000B10  0E00               	movlw	0
  1964  000B12  6E3E               	movwf	___ftdiv@f3+2,c
  1965  000B14  5040               	movf	___ftdiv@sign,w,c
  1966  000B16  0F89               	addlw	137
  1967  000B18  5E3F               	subwf	___ftdiv@exp,f,c
  1968  000B1A  C034  F040         	movff	___ftdiv@f1+2,___ftdiv@sign
  1969  000B1E  5037               	movf	___ftdiv@f2+2,w,c
  1970  000B20  1A40               	xorwf	___ftdiv@sign,f,c
  1971  000B22  0E80               	movlw	128
  1972  000B24  1640               	andwf	___ftdiv@sign,f,c
  1973  000B26  8E33               	bsf	___ftdiv@f1+1,7,c
  1974  000B28  0EFF               	movlw	255
  1975  000B2A  1632               	andwf	___ftdiv@f1,f,c
  1976  000B2C  0EFF               	movlw	255
  1977  000B2E  1633               	andwf	___ftdiv@f1+1,f,c
  1978  000B30  0E00               	movlw	0
  1979  000B32  1634               	andwf	___ftdiv@f1+2,f,c
  1980  000B34  8E36               	bsf	___ftdiv@f2+1,7,c
  1981  000B36  0EFF               	movlw	255
  1982  000B38  1635               	andwf	___ftdiv@f2,f,c
  1983  000B3A  0EFF               	movlw	255
  1984  000B3C  1636               	andwf	___ftdiv@f2+1,f,c
  1985  000B3E  0E00               	movlw	0
  1986  000B40  1637               	andwf	___ftdiv@f2+2,f,c
  1987  000B42  0E18               	movlw	24
  1988  000B44  6E3B               	movwf	___ftdiv@cntr,c
  1989  000B46                     i1l1925:
  1990  000B46  90D8               	bcf	status,0,c
  1991  000B48  363C               	rlcf	___ftdiv@f3,f,c
  1992  000B4A  363D               	rlcf	___ftdiv@f3+1,f,c
  1993  000B4C  363E               	rlcf	___ftdiv@f3+2,f,c
  1994  000B4E  5035               	movf	___ftdiv@f2,w,c
  1995  000B50  5C32               	subwf	___ftdiv@f1,w,c
  1996  000B52  5036               	movf	___ftdiv@f2+1,w,c
  1997  000B54  5833               	subwfb	___ftdiv@f1+1,w,c
  1998  000B56  5037               	movf	___ftdiv@f2+2,w,c
  1999  000B58  5834               	subwfb	___ftdiv@f1+2,w,c
  2000  000B5A  A0D8               	btfss	status,0,c
  2001  000B5C  D007               	goto	i1l546
  2002  000B5E  5035               	movf	___ftdiv@f2,w,c
  2003  000B60  5E32               	subwf	___ftdiv@f1,f,c
  2004  000B62  5036               	movf	___ftdiv@f2+1,w,c
  2005  000B64  5A33               	subwfb	___ftdiv@f1+1,f,c
  2006  000B66  5037               	movf	___ftdiv@f2+2,w,c
  2007  000B68  5A34               	subwfb	___ftdiv@f1+2,f,c
  2008  000B6A  803C               	bsf	___ftdiv@f3,0,c
  2009  000B6C                     i1l546:
  2010  000B6C  90D8               	bcf	status,0,c
  2011  000B6E  3632               	rlcf	___ftdiv@f1,f,c
  2012  000B70  3633               	rlcf	___ftdiv@f1+1,f,c
  2013  000B72  3634               	rlcf	___ftdiv@f1+2,f,c
  2014  000B74  2E3B               	decfsz	___ftdiv@cntr,f,c
  2015  000B76  D7E7               	goto	i1l1925
  2016  000B78  C03C  F027         	movff	___ftdiv@f3,___ftpack@arg
  2017  000B7C  C03D  F028         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2018  000B80  C03E  F029         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2019  000B84  C03F  F02A         	movff	___ftdiv@exp,___ftpack@exp
  2020  000B88  C040  F02B         	movff	___ftdiv@sign,___ftpack@sign
  2021  000B8C  EC3A  F006         	call	___ftpack	;wreg free
  2022  000B90  C027  F032         	movff	?___ftpack,?___ftdiv
  2023  000B94  C028  F033         	movff	?___ftpack+1,?___ftdiv+1
  2024  000B98  C029  F034         	movff	?___ftpack+2,?___ftdiv+2
  2025  000B9C  0012               	return	
  2026  000B9E                     __end_of___ftdiv:
  2027                           	opt stack 0
  2028                           prodh	equ	0xFF4
  2029                           prodl	equ	0xFF3
  2030                           intcon	equ	0xFF2
  2031                           postinc0	equ	0xFEE
  2032                           wreg	equ	0xFE8
  2033                           postdec1	equ	0xFE5
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           indf2	equ	0xFDF
  2037                           postinc2	equ	0xFDE
  2038                           postdec2	equ	0xFDD
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function ___ftpack *****************
  2044 ;; Defined at:
  2045 ;;		line 62 in file "D:\Programas\MPLABX\xc8\sources\common\float.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  arg             3   38[COMRAM] unsigned um
  2048 ;;  exp             1   41[COMRAM] unsigned char 
  2049 ;;  sign            1   42[COMRAM] unsigned char 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  3   38[COMRAM] float 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2061 ;;      Params:         5       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0
  2063 ;;      Temps:          3       0       0       0       0       0       0
  2064 ;;      Totals:         8       0       0       0       0       0       0
  2065 ;;Total ram usage:        8 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    4
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		___ftdiv
  2072 ;;		___ftmul
  2073 ;;		___lwtoft
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text9
  2078  000C74                     __ptext9:
  2079                           	opt stack 0
  2080  000C74                     ___ftpack:
  2081                           	opt stack 21
  2082                           
  2083                           ;incstack = 0
  2084  000C74  502A               	movf	___ftpack@exp,w,c
  2085  000C76  B4D8               	btfsc	status,2,c
  2086  000C78  D005               	goto	i1l1841
  2087  000C7A  5027               	movf	___ftpack@arg,w,c
  2088  000C7C  1028               	iorwf	___ftpack@arg+1,w,c
  2089  000C7E  1029               	iorwf	___ftpack@arg+2,w,c
  2090  000C80  A4D8               	btfss	status,2,c
  2091  000C82  D00C               	goto	i1l1847
  2092  000C84                     i1l1841:
  2093  000C84  0E00               	movlw	0
  2094  000C86  6E27               	movwf	?___ftpack,c
  2095  000C88  0E00               	movlw	0
  2096  000C8A  6E28               	movwf	?___ftpack+1,c
  2097  000C8C  0E00               	movlw	0
  2098  000C8E  6E29               	movwf	?___ftpack+2,c
  2099  000C90  0012               	return	
  2100  000C92                     i1l1845:
  2101  000C92  2A2A               	incf	___ftpack@exp,f,c
  2102  000C94  90D8               	bcf	status,0,c
  2103  000C96  3229               	rrcf	___ftpack@arg+2,f,c
  2104  000C98  3228               	rrcf	___ftpack@arg+1,f,c
  2105  000C9A  3227               	rrcf	___ftpack@arg,f,c
  2106  000C9C                     i1l1847:
  2107  000C9C  0E00               	movlw	0
  2108  000C9E  1427               	andwf	___ftpack@arg,w,c
  2109  000CA0  6E2C               	movwf	??___ftpack& (0+255),c
  2110  000CA2  0E00               	movlw	0
  2111  000CA4  1428               	andwf	___ftpack@arg+1,w,c
  2112  000CA6  6E2D               	movwf	(??___ftpack+1)& (0+255),c
  2113  000CA8  0EFE               	movlw	254
  2114  000CAA  1429               	andwf	___ftpack@arg+2,w,c
  2115  000CAC  6E2E               	movwf	(??___ftpack+2)& (0+255),c
  2116  000CAE  502C               	movf	??___ftpack,w,c
  2117  000CB0  102D               	iorwf	??___ftpack+1,w,c
  2118  000CB2  102E               	iorwf	??___ftpack+2,w,c
  2119  000CB4  B4D8               	btfsc	status,2,c
  2120  000CB6  D00C               	goto	i1l1853
  2121  000CB8  D7EC               	goto	i1l1845
  2122  000CBA                     i1l1849:
  2123  000CBA  2A2A               	incf	___ftpack@exp,f,c
  2124  000CBC  0E01               	movlw	1
  2125  000CBE  2627               	addwf	___ftpack@arg,f,c
  2126  000CC0  0E00               	movlw	0
  2127  000CC2  2228               	addwfc	___ftpack@arg+1,f,c
  2128  000CC4  0E00               	movlw	0
  2129  000CC6  2229               	addwfc	___ftpack@arg+2,f,c
  2130  000CC8  90D8               	bcf	status,0,c
  2131  000CCA  3229               	rrcf	___ftpack@arg+2,f,c
  2132  000CCC  3228               	rrcf	___ftpack@arg+1,f,c
  2133  000CCE  3227               	rrcf	___ftpack@arg,f,c
  2134  000CD0                     i1l1853:
  2135  000CD0  0E00               	movlw	0
  2136  000CD2  1427               	andwf	___ftpack@arg,w,c
  2137  000CD4  6E2C               	movwf	??___ftpack& (0+255),c
  2138  000CD6  0E00               	movlw	0
  2139  000CD8  1428               	andwf	___ftpack@arg+1,w,c
  2140  000CDA  6E2D               	movwf	(??___ftpack+1)& (0+255),c
  2141  000CDC  0EFF               	movlw	255
  2142  000CDE  1429               	andwf	___ftpack@arg+2,w,c
  2143  000CE0  6E2E               	movwf	(??___ftpack+2)& (0+255),c
  2144  000CE2  502C               	movf	??___ftpack,w,c
  2145  000CE4  102D               	iorwf	??___ftpack+1,w,c
  2146  000CE6  102E               	iorwf	??___ftpack+2,w,c
  2147  000CE8  B4D8               	btfsc	status,2,c
  2148  000CEA  D006               	goto	i1l1857
  2149  000CEC  D7E6               	goto	i1l1849
  2150  000CEE                     i1l1855:
  2151  000CEE  062A               	decf	___ftpack@exp,f,c
  2152  000CF0  90D8               	bcf	status,0,c
  2153  000CF2  3627               	rlcf	___ftpack@arg,f,c
  2154  000CF4  3628               	rlcf	___ftpack@arg+1,f,c
  2155  000CF6  3629               	rlcf	___ftpack@arg+2,f,c
  2156  000CF8                     i1l1857:
  2157  000CF8  BE28               	btfsc	___ftpack@arg+1,7,c
  2158  000CFA  D003               	goto	i1l488
  2159  000CFC  0E02               	movlw	2
  2160  000CFE  602A               	cpfslt	___ftpack@exp,c
  2161  000D00  D7F6               	goto	i1l1855
  2162  000D02                     i1l488:
  2163  000D02  A02A               	btfss	___ftpack@exp,0,c
  2164  000D04  9E28               	bcf	___ftpack@arg+1,7,c
  2165  000D06  90D8               	bcf	status,0,c
  2166  000D08  322A               	rrcf	___ftpack@exp,f,c
  2167  000D0A  502A               	movf	___ftpack@exp,w,c
  2168  000D0C  1229               	iorwf	___ftpack@arg+2,f,c
  2169  000D0E  502B               	movf	___ftpack@sign,w,c
  2170  000D10  A4D8               	btfss	status,2,c
  2171  000D12  8E29               	bsf	___ftpack@arg+2,7,c
  2172  000D14  C027  F027         	movff	___ftpack@arg,?___ftpack
  2173  000D18  C028  F028         	movff	___ftpack@arg+1,?___ftpack+1
  2174  000D1C  C029  F029         	movff	___ftpack@arg+2,?___ftpack+2
  2175  000D20  0012               	return	
  2176  000D22                     __end_of___ftpack:
  2177                           	opt stack 0
  2178                           prodh	equ	0xFF4
  2179                           prodl	equ	0xFF3
  2180                           intcon	equ	0xFF2
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           postdec1	equ	0xFE5
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _tarefa_dois *****************
  2194 ;; Defined at:
  2195 ;;		line 48 in file "tasks.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2209 ;;      Params:         0       0       0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0
  2211 ;;      Temps:          0       2       0       0       0       0       0
  2212 ;;      Totals:         0       2       0       0       0       0       0
  2213 ;;Total ram usage:        2 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    4
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text10
  2224  000B9E                     __ptext10:
  2225                           	opt stack 0
  2226  000B9E                     _tarefa_dois:
  2227                           	opt stack 23
  2228                           
  2229                           ;tasks.c: 50: TRISBbits.RB0 = 0;
  2230                           
  2231                           ;incstack = 0
  2232  000B9E  9093               	bcf	3987,0,c	;volatile
  2233                           
  2234                           ;tasks.c: 51: PORTBbits.RB0 = 0;
  2235  000BA0  9081               	bcf	3969,0,c	;volatile
  2236                           
  2237                           ;tasks.c: 52: TRISBbits.RB1 = 0;
  2238  000BA2  9293               	bcf	3987,1,c	;volatile
  2239                           
  2240                           ;tasks.c: 53: PORTBbits.RB1 = 0;
  2241  000BA4  9281               	bcf	3969,1,c	;volatile
  2242                           
  2243                           ;tasks.c: 54: TRISBbits.RB2 = 0;
  2244  000BA6  9493               	bcf	3987,2,c	;volatile
  2245                           
  2246                           ;tasks.c: 55: PORTBbits.RB2 = 0;
  2247  000BA8  9481               	bcf	3969,2,c	;volatile
  2248  000BAA                     l77:
  2249                           
  2250                           ;tasks.c: 59: PORTBbits.RB0 = 0;
  2251  000BAA  9081               	bcf	3969,0,c	;volatile
  2252                           
  2253                           ;tasks.c: 60: PORTBbits.RB1 = 0;
  2254  000BAC  9281               	bcf	3969,1,c	;volatile
  2255                           
  2256                           ;tasks.c: 61: PORTBbits.RB2 = 0;
  2257  000BAE  9481               	bcf	3969,2,c	;volatile
  2258                           
  2259                           ;tasks.c: 63: while((*ptr_shared_memory > 30) && (*ptr_shared_memory <= 40)){
  2260  000BB0  D00C               	goto	l1715
  2261  000BB2                     l79:
  2262                           
  2263                           ;tasks.c: 64: PORTBbits.RB0 = 1;
  2264  000BB2  8081               	bsf	3969,0,c	;volatile
  2265                           
  2266                           ;tasks.c: 65: PORTBbits.RB1 = 0;
  2267  000BB4  9281               	bcf	3969,1,c	;volatile
  2268                           
  2269                           ;tasks.c: 66: PORTBbits.RB2 = 0;
  2270  000BB6  9481               	bcf	3969,2,c	;volatile
  2271                           
  2272                           ;tasks.c: 67: shared_memory[11] = 100;
  2273  000BB8  0E00               	movlw	0
  2274  000BBA  0100               	movlb	0	; () banked
  2275  000BBC  6FC5               	movwf	(_shared_memory+23)& (0+255),b
  2276  000BBE  0E64               	movlw	100
  2277  000BC0  6FC4               	movwf	(_shared_memory+22)& (0+255),b
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;tasks.c: 68: ptr_speed = & shared_memory[11];
  2281  000BC2  0EC4               	movlw	low (_shared_memory+22)
  2282  000BC4  6E57               	movwf	_ptr_speed,c
  2283  000BC6  0E00               	movlw	high (_shared_memory+22)
  2284  000BC8  6E58               	movwf	_ptr_speed+1,c
  2285  000BCA                     l1715:
  2286  000BCA  C0AC  FFD9         	movff	_ptr_shared_memory,fsr2l
  2287  000BCE  C0AD  FFDA         	movff	_ptr_shared_memory+1,fsr2h
  2288  000BD2  0E01               	movlw	1
  2289  000BD4  50DB               	movf	plusw2,w,c
  2290  000BD6  E104               	bnz	u110_20
  2291  000BD8  0E1F               	movlw	31
  2292  000BDA  5CDE               	subwf	postinc2,w,c
  2293  000BDC  A0D8               	btfss	status,0,c
  2294  000BDE  D018               	goto	l1723
  2295  000BE0                     u110_20:
  2296  000BE0  C0AC  FFD9         	movff	_ptr_shared_memory,fsr2l
  2297  000BE4  C0AD  FFDA         	movff	_ptr_shared_memory+1,fsr2h
  2298  000BE8  0E01               	movlw	1
  2299  000BEA  50DB               	movf	plusw2,w,c
  2300  000BEC  E111               	bnz	l1723
  2301  000BEE  0E29               	movlw	41
  2302  000BF0  5CDE               	subwf	postinc2,w,c
  2303  000BF2  B0D8               	btfsc	status,0,c
  2304  000BF4  D00D               	goto	l1723
  2305  000BF6  D7DD               	goto	l79
  2306  000BF8                     l84:
  2307                           
  2308                           ;tasks.c: 72: PORTBbits.RB0 = 0;
  2309  000BF8  9081               	bcf	3969,0,c	;volatile
  2310                           
  2311                           ;tasks.c: 73: PORTBbits.RB1 = 1;
  2312  000BFA  8281               	bsf	3969,1,c	;volatile
  2313                           
  2314                           ;tasks.c: 74: PORTBbits.RB2 = 0;
  2315  000BFC  9481               	bcf	3969,2,c	;volatile
  2316                           
  2317                           ;tasks.c: 75: shared_memory[11] = 50;
  2318  000BFE  0E00               	movlw	0
  2319  000C00  0100               	movlb	0	; () banked
  2320  000C02  6FC5               	movwf	(_shared_memory+23)& (0+255),b
  2321  000C04  0E32               	movlw	50
  2322  000C06  6FC4               	movwf	(_shared_memory+22)& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;tasks.c: 76: ptr_speed = & shared_memory[11];
  2326  000C08  0EC4               	movlw	low (_shared_memory+22)
  2327  000C0A  6E57               	movwf	_ptr_speed,c
  2328  000C0C  0E00               	movlw	high (_shared_memory+22)
  2329  000C0E  6E58               	movwf	_ptr_speed+1,c
  2330  000C10                     l1723:
  2331  000C10  C0AC  FFD9         	movff	_ptr_shared_memory,fsr2l
  2332  000C14  C0AD  FFDA         	movff	_ptr_shared_memory+1,fsr2h
  2333  000C18  0E01               	movlw	1
  2334  000C1A  50DB               	movf	plusw2,w,c
  2335  000C1C  E104               	bnz	u112_20
  2336  000C1E  0E28               	movlw	40
  2337  000C20  5CDE               	subwf	postinc2,w,c
  2338  000C22  A0D8               	btfss	status,0,c
  2339  000C24  D018               	goto	l1731
  2340  000C26                     u112_20:
  2341  000C26  C0AC  FFD9         	movff	_ptr_shared_memory,fsr2l
  2342  000C2A  C0AD  FFDA         	movff	_ptr_shared_memory+1,fsr2h
  2343  000C2E  0E01               	movlw	1
  2344  000C30  50DB               	movf	plusw2,w,c
  2345  000C32  E111               	bnz	l1731
  2346  000C34  0E33               	movlw	51
  2347  000C36  5CDE               	subwf	postinc2,w,c
  2348  000C38  B0D8               	btfsc	status,0,c
  2349  000C3A  D00D               	goto	l1731
  2350  000C3C  D7DD               	goto	l84
  2351  000C3E                     l89:
  2352                           
  2353                           ;tasks.c: 80: PORTBbits.RB0 = 0;
  2354  000C3E  9081               	bcf	3969,0,c	;volatile
  2355                           
  2356                           ;tasks.c: 81: PORTBbits.RB1 = 0;
  2357  000C40  9281               	bcf	3969,1,c	;volatile
  2358                           
  2359                           ;tasks.c: 82: PORTBbits.RB2 = 1;
  2360  000C42  8481               	bsf	3969,2,c	;volatile
  2361                           
  2362                           ;tasks.c: 83: shared_memory[11] = 0;
  2363  000C44  0E00               	movlw	0
  2364  000C46  0100               	movlb	0	; () banked
  2365  000C48  6FC5               	movwf	(_shared_memory+23)& (0+255),b
  2366  000C4A  0E00               	movlw	0
  2367  000C4C  6FC4               	movwf	(_shared_memory+22)& (0+255),b
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;tasks.c: 84: ptr_speed = & shared_memory[11];
  2371  000C4E  0EC4               	movlw	low (_shared_memory+22)
  2372  000C50  6E57               	movwf	_ptr_speed,c
  2373  000C52  0E00               	movlw	high (_shared_memory+22)
  2374  000C54  6E58               	movwf	_ptr_speed+1,c
  2375  000C56                     l1731:
  2376  000C56  C0AC  FFD9         	movff	_ptr_shared_memory,fsr2l
  2377  000C5A  C0AD  FFDA         	movff	_ptr_shared_memory+1,fsr2h
  2378  000C5E  0E01               	movlw	1
  2379  000C60  50DB               	movf	plusw2,w,c
  2380  000C62  E1ED               	bnz	l89
  2381  000C64  0E32               	movlw	50
  2382  000C66  5CDE               	subwf	postinc2,w,c
  2383  000C68  B0D8               	btfsc	status,0,c
  2384  000C6A  D7E9               	goto	l89
  2385  000C6C  F000               	nop		;# 
  2386  000C6E  F000               	nop		;# 
  2387  000C70  F000               	nop		;# 
  2388  000C72  D79B               	goto	l77
  2389  000C74                     __end_of_tarefa_dois:
  2390                           	opt stack 0
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           postdec1	equ	0xFE5
  2397                           fsr1h	equ	0xFE2
  2398                           fsr1l	equ	0xFE1
  2399                           indf2	equ	0xFDF
  2400                           postinc2	equ	0xFDE
  2401                           postdec2	equ	0xFDD
  2402                           plusw2	equ	0xFDB
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _tarefa_tres *****************
  2408 ;; Defined at:
  2409 ;;		line 93 in file "tasks.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2423 ;;      Params:         0       0       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0
  2425 ;;      Temps:          0       2       0       0       0       0       0
  2426 ;;      Totals:         0       2       0       0       0       0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    4
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text11
  2438  000DAE                     __ptext11:
  2439                           	opt stack 0
  2440  000DAE                     _tarefa_tres:
  2441                           	opt stack 23
  2442                           
  2443                           ;tasks.c: 95: TRISCbits.RC2 = 0;
  2444                           
  2445                           ;incstack = 0
  2446  000DAE  9494               	bcf	3988,2,c	;volatile
  2447                           
  2448                           ;tasks.c: 96: PORTCbits.RC2 = 0;
  2449  000DB0  9482               	bcf	3970,2,c	;volatile
  2450                           
  2451                           ;tasks.c: 97: CCP1CONbits.CCP1M = 0x0c;
  2452  000DB2  50BD               	movf	4029,w,c	;volatile
  2453  000DB4  0BF0               	andlw	-16
  2454  000DB6  090C               	iorlw	12
  2455  000DB8  6EBD               	movwf	4029,c	;volatile
  2456                           
  2457                           ;tasks.c: 99: PR2 = 155;
  2458  000DBA  0E9B               	movlw	155
  2459  000DBC  6ECB               	movwf	4043,c	;volatile
  2460                           
  2461                           ;tasks.c: 100: T2CONbits.T2CKPS = 0x02;
  2462  000DBE  50CA               	movf	4042,w,c	;volatile
  2463  000DC0  0BFC               	andlw	-4
  2464  000DC2  0902               	iorlw	2
  2465  000DC4  6ECA               	movwf	4042,c	;volatile
  2466                           
  2467                           ;tasks.c: 101: T2CONbits.TMR2ON = 1;
  2468  000DC6  84CA               	bsf	4042,2,c	;volatile
  2469                           
  2470                           ;tasks.c: 104: while(*ptr_shared_memory > 30){
  2471                           
  2472                           ;tasks.c: 103: while (1) {
  2473  000DC8  D009               	goto	l1741
  2474  000DCA                     l98:
  2475                           
  2476                           ;tasks.c: 105: PORTCbits.RC2 = 1;
  2477  000DCA  8482               	bsf	3970,2,c	;volatile
  2478                           
  2479                           ;tasks.c: 106: CCPR1 = *ptr_speed;
  2480  000DCC  C057  FFD9         	movff	_ptr_speed,fsr2l
  2481  000DD0  C058  FFDA         	movff	_ptr_speed+1,fsr2h
  2482  000DD4  CFDE FFBE          	movff	postinc2,4030	;volatile
  2483  000DD8  CFDD FFBF          	movff	postdec2,4031	;volatile
  2484  000DDC                     l1741:
  2485  000DDC  C0AC  FFD9         	movff	_ptr_shared_memory,fsr2l
  2486  000DE0  C0AD  FFDA         	movff	_ptr_shared_memory+1,fsr2h
  2487  000DE4  0E01               	movlw	1
  2488  000DE6  50DB               	movf	plusw2,w,c
  2489  000DE8  E1F0               	bnz	l98
  2490  000DEA  0E1F               	movlw	31
  2491  000DEC  5CDE               	subwf	postinc2,w,c
  2492  000DEE  A0D8               	btfss	status,0,c
  2493  000DF0  D006               	goto	l1745
  2494  000DF2  D7EB               	goto	l98
  2495  000DF4                     l101:
  2496                           
  2497                           ;tasks.c: 110: PORTCbits.RC2 = 0;
  2498  000DF4  9482               	bcf	3970,2,c	;volatile
  2499                           
  2500                           ;tasks.c: 111: CCPR1 = 155;
  2501  000DF6  0E00               	movlw	0
  2502  000DF8  6EBF               	movwf	4031,c	;volatile
  2503  000DFA  0E9B               	movlw	155
  2504  000DFC  6EBE               	movwf	4030,c	;volatile
  2505  000DFE                     l1745:
  2506  000DFE  C0AC  FFD9         	movff	_ptr_shared_memory,fsr2l
  2507  000E02  C0AD  FFDA         	movff	_ptr_shared_memory+1,fsr2h
  2508  000E06  0E01               	movlw	1
  2509  000E08  50DB               	movf	plusw2,w,c
  2510  000E0A  E104               	bnz	u116_20
  2511  000E0C  0E1F               	movlw	31
  2512  000E0E  5CDE               	subwf	postinc2,w,c
  2513  000E10  A0D8               	btfss	status,0,c
  2514  000E12  D7F0               	goto	l101
  2515  000E14                     u116_20:
  2516  000E14  F000               	nop		;# 
  2517  000E16  F000               	nop		;# 
  2518  000E18  F000               	nop		;# 
  2519  000E1A  D7E0               	goto	l1741
  2520  000E1C                     __end_of_tarefa_tres:
  2521                           	opt stack 0
  2522                           prodh	equ	0xFF4
  2523                           prodl	equ	0xFF3
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           postdec1	equ	0xFE5
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           plusw2	equ	0xFDB
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _task_IDLE *****************
  2539 ;; Defined at:
  2540 ;;		line 136 in file "kernel.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		None
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    4
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_macos_start
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text12
  2569  001004                     __ptext12:
  2570                           	opt stack 0
  2571  001004                     _task_IDLE:
  2572                           	opt stack 23
  2573                           
  2574                           ;incstack = 0
  2575  001004  F000               	nop		;# 
  2576  001006  F000               	nop		;# 
  2577  001008  F000               	nop		;# 
  2578  00100A  0012               	return		;funcret
  2579  00100C                     __end_of_task_IDLE:
  2580                           	opt stack 0
  2581                           prodh	equ	0xFF4
  2582                           prodl	equ	0xFF3
  2583                           intcon	equ	0xFF2
  2584                           postinc0	equ	0xFEE
  2585                           wreg	equ	0xFE8
  2586                           postdec1	equ	0xFE5
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           indf2	equ	0xFDF
  2590                           postinc2	equ	0xFDE
  2591                           postdec2	equ	0xFDD
  2592                           plusw2	equ	0xFDB
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _interrupt_handler *****************
  2598 ;; Defined at:
  2599 ;;		line 162 in file "kernel.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2613 ;;      Params:         0       0       0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0
  2615 ;;      Temps:         14       0       0       0       0       0       0
  2616 ;;      Totals:        14       0       0       0       0       0       0
  2617 ;;Total ram usage:       14 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    3
  2620 ;; This function calls:
  2621 ;;		_despachante
  2622 ;; This function is called by:
  2623 ;;		Interrupt level 2
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	intcode
  2628  000008                     __pintcode:
  2629                           	opt stack 0
  2630  000008                     _interrupt_handler:
  2631                           	opt stack 21
  2632                           
  2633                           ;incstack = 0
  2634  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2635  00000A  ED91  F006         	call	int_func,f	;refresh shadow registers
  2636                           prodh	equ	0xFF4
  2637                           prodl	equ	0xFF3
  2638                           intcon	equ	0xFF2
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           indf2	equ	0xFDF
  2645                           postinc2	equ	0xFDE
  2646                           postdec2	equ	0xFDD
  2647                           plusw2	equ	0xFDB
  2648                           fsr2h	equ	0xFDA
  2649                           fsr2l	equ	0xFD9
  2650                           status	equ	0xFD8
  2651                           
  2652                           	psect	intcode_body
  2653  000D22                     __pintcode_body:
  2654                           	opt stack 21
  2655  000D22                     int_func:
  2656                           	opt stack 21
  2657  000D22  0006               	pop		; remove dummy address from shadow register refresh
  2658  000D24  CFFA F019          	movff	pclath,??_interrupt_handler
  2659  000D28  CFFB F01A          	movff	pclatu,??_interrupt_handler+1
  2660  000D2C  CFE9 F01B          	movff	fsr0l,??_interrupt_handler+2
  2661  000D30  CFEA F01C          	movff	fsr0h,??_interrupt_handler+3
  2662  000D34  CFE1 F01D          	movff	fsr1l,??_interrupt_handler+4
  2663  000D38  CFE2 F01E          	movff	fsr1h,??_interrupt_handler+5
  2664  000D3C  CFD9 F01F          	movff	fsr2l,??_interrupt_handler+6
  2665  000D40  CFDA F020          	movff	fsr2h,??_interrupt_handler+7
  2666  000D44  CFF3 F021          	movff	prodl,??_interrupt_handler+8
  2667  000D48  CFF4 F022          	movff	prodh,??_interrupt_handler+9
  2668  000D4C  CFF6 F023          	movff	tblptrl,??_interrupt_handler+10
  2669  000D50  CFF7 F024          	movff	tblptrh,??_interrupt_handler+11
  2670  000D54  CFF8 F025          	movff	tblptru,??_interrupt_handler+12
  2671  000D58  CFF5 F026          	movff	tablat,??_interrupt_handler+13
  2672                           
  2673                           ;kernel.c: 164: if(INTCONbits.T0IE && INTCONbits.T0IF)
  2674  000D5C  BAF2               	btfsc	intcon,5,c	;volatile
  2675  000D5E  A4F2               	btfss	intcon,2,c	;volatile
  2676  000D60  D008               	goto	i2l194
  2677                           
  2678                           ;kernel.c: 165: {
  2679                           ;kernel.c: 166: INTCONbits.TMR0IF = 0;
  2680  000D62  94F2               	bcf	intcon,2,c	;volatile
  2681                           
  2682                           ;kernel.c: 168: TMR0 = 59286;
  2683  000D64  0EE7               	movlw	231
  2684  000D66  6ED7               	movwf	4055,c	;volatile
  2685  000D68  0E96               	movlw	150
  2686  000D6A  6ED6               	movwf	4054,c	;volatile
  2687                           
  2688                           ;kernel.c: 170: despachante(READY);
  2689  000D6C  0E00               	movlw	0
  2690  000D6E  EC09  F000         	call	_despachante
  2691  000D72                     i2l194:
  2692  000D72  C026  FFF5         	movff	??_interrupt_handler+13,tablat
  2693  000D76  C025  FFF8         	movff	??_interrupt_handler+12,tblptru
  2694  000D7A  C024  FFF7         	movff	??_interrupt_handler+11,tblptrh
  2695  000D7E  C023  FFF6         	movff	??_interrupt_handler+10,tblptrl
  2696  000D82  C022  FFF4         	movff	??_interrupt_handler+9,prodh
  2697  000D86  C021  FFF3         	movff	??_interrupt_handler+8,prodl
  2698  000D8A  C020  FFDA         	movff	??_interrupt_handler+7,fsr2h
  2699  000D8E  C01F  FFD9         	movff	??_interrupt_handler+6,fsr2l
  2700  000D92  C01E  FFE2         	movff	??_interrupt_handler+5,fsr1h
  2701  000D96  C01D  FFE1         	movff	??_interrupt_handler+4,fsr1l
  2702  000D9A  C01C  FFEA         	movff	??_interrupt_handler+3,fsr0h
  2703  000D9E  C01B  FFE9         	movff	??_interrupt_handler+2,fsr0l
  2704  000DA2  C01A  FFFB         	movff	??_interrupt_handler+1,pclatu
  2705  000DA6  C019  FFFA         	movff	??_interrupt_handler,pclath
  2706  000DAA  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2707  000DAC  0011               	retfie		f
  2708  000DAE                     __end_of_interrupt_handler:
  2709                           	opt stack 0
  2710                           pclatu	equ	0xFFB
  2711                           pclath	equ	0xFFA
  2712                           tblptru	equ	0xFF8
  2713                           tblptrh	equ	0xFF7
  2714                           tblptrl	equ	0xFF6
  2715                           tablat	equ	0xFF5
  2716                           prodh	equ	0xFF4
  2717                           prodl	equ	0xFF3
  2718                           intcon	equ	0xFF2
  2719                           postinc0	equ	0xFEE
  2720                           fsr0h	equ	0xFEA
  2721                           fsr0l	equ	0xFE9
  2722                           wreg	equ	0xFE8
  2723                           postdec1	equ	0xFE5
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           postinc2	equ	0xFDE
  2728                           postdec2	equ	0xFDD
  2729                           plusw2	equ	0xFDB
  2730                           fsr2h	equ	0xFDA
  2731                           fsr2l	equ	0xFD9
  2732                           status	equ	0xFD8
  2733                           
  2734 ;; *************** function _despachante *****************
  2735 ;; Defined at:
  2736 ;;		line 143 in file "kernel.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  STATE           1    wreg     enum E25
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  STATE           1   19[COMRAM] enum E25
  2741 ;;  pos_queue       2   22[COMRAM] int 
  2742 ;;  pos_queue       2   20[COMRAM] int 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2752 ;;      Params:         0       0       0       0       0       0       0
  2753 ;;      Locals:         5       0       0       0       0       0       0
  2754 ;;      Temps:          7       0       0       0       0       0       0
  2755 ;;      Totals:        12       0       0       0       0       0       0
  2756 ;;Total ram usage:       12 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    2
  2759 ;; This function calls:
  2760 ;;		_rr_scheduler
  2761 ;;		i2___wmul
  2762 ;; This function is called by:
  2763 ;;		_interrupt_handler
  2764 ;;		_macos_delay
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text14
  2769  000012                     __ptext14:
  2770                           	opt stack 0
  2771  000012                     _despachante:
  2772                           	opt stack 21
  2773                           
  2774                           ;incstack = 0
  2775                           ;despachante@STATE stored from wreg
  2776  000012  6E14               	movwf	despachante@STATE,c
  2777                           
  2778                           ;kernel.c: 145: INTCONbits.GIE = 0;
  2779  000014  9EF2               	bcf	intcon,7,c	;volatile
  2780                           
  2781                           ;kernel.c: 146: do{ READY_Queue[task_running].ctx.WORK_reg = WREG; READY_Queue[task_runn
      +                          ing].ctx.BSR_reg = BSR; READY_Queue[task_running].ctx.STAT_reg = STATUS; do { int pos_qu
      +                          eue = READY_Queue[task_running].ctx.task_stack_size; READY_Queue[task_running].ctx.task_
      +                          st
  2782  000016  C055  F001         	movff	_task_running,i2___wmul@multiplier
  2783  00001A  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  2784  00001E  0E00               	movlw	0
  2785  000020  6E04               	movwf	i2___wmul@multiplicand+1,c
  2786  000022  0EC8               	movlw	200
  2787  000024  6E03               	movwf	i2___wmul@multiplicand,c
  2788  000026  ECDD  F007         	call	i2___wmul	;wreg free
  2789  00002A  0E09               	movlw	9
  2790  00002C  2601               	addwf	?i2___wmul,f,c
  2791  00002E  0E00               	movlw	0
  2792  000030  2202               	addwfc	?i2___wmul+1,f,c
  2793  000032  0EC4               	movlw	low _READY_Queue
  2794  000034  2401               	addwf	?i2___wmul,w,c
  2795  000036  6ED9               	movwf	fsr2l,c
  2796  000038  0E00               	movlw	high _READY_Queue
  2797  00003A  2002               	addwfc	?i2___wmul+1,w,c
  2798  00003C  6EDA               	movwf	fsr2h,c
  2799  00003E  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2800  000042  C055  F001         	movff	_task_running,i2___wmul@multiplier
  2801  000046  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  2802  00004A  0E00               	movlw	0
  2803  00004C  6E04               	movwf	i2___wmul@multiplicand+1,c
  2804  00004E  0EC8               	movlw	200
  2805  000050  6E03               	movwf	i2___wmul@multiplicand,c
  2806  000052  ECDD  F007         	call	i2___wmul	;wreg free
  2807  000056  0E0B               	movlw	11
  2808  000058  2601               	addwf	?i2___wmul,f,c
  2809  00005A  0E00               	movlw	0
  2810  00005C  2202               	addwfc	?i2___wmul+1,f,c
  2811  00005E  0EC4               	movlw	low _READY_Queue
  2812  000060  2401               	addwf	?i2___wmul,w,c
  2813  000062  6ED9               	movwf	fsr2l,c
  2814  000064  0E00               	movlw	high _READY_Queue
  2815  000066  2002               	addwfc	?i2___wmul+1,w,c
  2816  000068  6EDA               	movwf	fsr2h,c
  2817  00006A  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2818  00006E  C055  F001         	movff	_task_running,i2___wmul@multiplier
  2819  000072  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  2820  000076  0E00               	movlw	0
  2821  000078  6E04               	movwf	i2___wmul@multiplicand+1,c
  2822  00007A  0EC8               	movlw	200
  2823  00007C  6E03               	movwf	i2___wmul@multiplicand,c
  2824  00007E  ECDD  F007         	call	i2___wmul	;wreg free
  2825  000082  0E0A               	movlw	10
  2826  000084  2601               	addwf	?i2___wmul,f,c
  2827  000086  0E00               	movlw	0
  2828  000088  2202               	addwfc	?i2___wmul+1,f,c
  2829  00008A  0EC4               	movlw	low _READY_Queue
  2830  00008C  2401               	addwf	?i2___wmul,w,c
  2831  00008E  6ED9               	movwf	fsr2l,c
  2832  000090  0E00               	movlw	high _READY_Queue
  2833  000092  2002               	addwfc	?i2___wmul+1,w,c
  2834  000094  6EDA               	movwf	fsr2h,c
  2835  000096  CFD8 FFDF          	movff	status,indf2	;volatile
  2836  00009A                     i2l181:
  2837  00009A  C055  F001         	movff	_task_running,i2___wmul@multiplier
  2838  00009E  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  2839  0000A2  0E00               	movlw	0
  2840  0000A4  6E04               	movwf	i2___wmul@multiplicand+1,c
  2841  0000A6  0EC8               	movlw	200
  2842  0000A8  6E03               	movwf	i2___wmul@multiplicand,c
  2843  0000AA  ECDD  F007         	call	i2___wmul	;wreg free
  2844  0000AE  0EC6               	movlw	198
  2845  0000B0  2601               	addwf	?i2___wmul,f,c
  2846  0000B2  0E00               	movlw	0
  2847  0000B4  2202               	addwfc	?i2___wmul+1,f,c
  2848  0000B6  0EC4               	movlw	low _READY_Queue
  2849  0000B8  2401               	addwf	?i2___wmul,w,c
  2850  0000BA  6ED9               	movwf	fsr2l,c
  2851  0000BC  0E00               	movlw	high _READY_Queue
  2852  0000BE  2002               	addwfc	?i2___wmul+1,w,c
  2853  0000C0  6EDA               	movwf	fsr2h,c
  2854  0000C2  CFDE F015          	movff	postinc2,despachante@pos_queue
  2855  0000C6  CFDD F016          	movff	postdec2,despachante@pos_queue+1
  2856  0000CA  0E10               	movlw	16
  2857  0000CC  6E0D               	movwf	??_despachante& (0+255),c
  2858  0000CE  CFFD F00E          	movff	tosl,??_despachante+1	;volatile
  2859  0000D2  CFFE F00F          	movff	tosh,??_despachante+2	;volatile
  2860  0000D6  CFFF F010          	movff	tosu,??_despachante+3	;volatile
  2861  0000DA  280D               	incf	??_despachante,w,c
  2862  0000DC  6E11               	movwf	(??_despachante+4)& (0+255),c
  2863  0000DE  D004               	goto	i2u84_40
  2864  0000E0                     i2u84_45:
  2865  0000E0  90D8               	bcf	status,0,c
  2866  0000E2  3210               	rrcf	??_despachante+3,f,c
  2867  0000E4  320F               	rrcf	??_despachante+2,f,c
  2868  0000E6  320E               	rrcf	??_despachante+1,f,c
  2869  0000E8                     i2u84_40:
  2870  0000E8  2E11               	decfsz	(??_despachante+4)& (0+255),f,c
  2871  0000EA  D7FA               	goto	i2u84_45
  2872  0000EC  C055  F001         	movff	_task_running,i2___wmul@multiplier
  2873  0000F0  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  2874  0000F4  0E00               	movlw	0
  2875  0000F6  6E04               	movwf	i2___wmul@multiplicand+1,c
  2876  0000F8  0EC8               	movlw	200
  2877  0000FA  6E03               	movwf	i2___wmul@multiplicand,c
  2878  0000FC  ECDD  F007         	call	i2___wmul	;wreg free
  2879  000100  0E09               	movlw	9
  2880  000102  2601               	addwf	?i2___wmul,f,c
  2881  000104  0E00               	movlw	0
  2882  000106  2202               	addwfc	?i2___wmul+1,f,c
  2883  000108  0EC4               	movlw	low _READY_Queue
  2884  00010A  6E12               	movwf	(??_despachante+5)& (0+255),c
  2885  00010C  0E00               	movlw	high _READY_Queue
  2886  00010E  6E13               	movwf	(??_despachante+6)& (0+255),c
  2887  000110  5001               	movf	?i2___wmul,w,c
  2888  000112  2612               	addwf	??_despachante+5,f,c
  2889  000114  5002               	movf	?i2___wmul+1,w,c
  2890  000116  2213               	addwfc	??_despachante+6,f,c
  2891  000118  C015  F001         	movff	despachante@pos_queue,i2___wmul@multiplier
  2892  00011C  C016  F002         	movff	despachante@pos_queue+1,i2___wmul@multiplier+1
  2893  000120  0E00               	movlw	0
  2894  000122  6E04               	movwf	i2___wmul@multiplicand+1,c
  2895  000124  0E06               	movlw	6
  2896  000126  6E03               	movwf	i2___wmul@multiplicand,c
  2897  000128  ECDD  F007         	call	i2___wmul	;wreg free
  2898  00012C  0E03               	movlw	3
  2899  00012E  2601               	addwf	?i2___wmul,f,c
  2900  000130  0E00               	movlw	0
  2901  000132  2202               	addwfc	?i2___wmul+1,f,c
  2902  000134  5001               	movf	?i2___wmul,w,c
  2903  000136  2412               	addwf	??_despachante+5,w,c
  2904  000138  6ED9               	movwf	fsr2l,c
  2905  00013A  5002               	movf	?i2___wmul+1,w,c
  2906  00013C  2013               	addwfc	??_despachante+6,w,c
  2907  00013E  6EDA               	movwf	fsr2h,c
  2908  000140  C00E  FFDE         	movff	??_despachante+1,postinc2
  2909  000144  C00F  FFDD         	movff	??_despachante+2,postdec2
  2910  000148  CFFD F00D          	movff	tosl,??_despachante	;volatile
  2911  00014C  CFFE F00E          	movff	tosh,??_despachante+1	;volatile
  2912  000150  CFFF F00F          	movff	tosu,??_despachante+2	;volatile
  2913  000154  C00E  F00D         	movff	??_despachante+1,??_despachante
  2914  000158  C00F  F00E         	movff	??_despachante+2,??_despachante+1
  2915  00015C  6A0F               	clrf	??_despachante+2,c
  2916  00015E  C055  F001         	movff	_task_running,i2___wmul@multiplier
  2917  000162  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  2918  000166  0E00               	movlw	0
  2919  000168  6E04               	movwf	i2___wmul@multiplicand+1,c
  2920  00016A  0EC8               	movlw	200
  2921  00016C  6E03               	movwf	i2___wmul@multiplicand,c
  2922  00016E  ECDD  F007         	call	i2___wmul	;wreg free
  2923  000172  0E09               	movlw	9
  2924  000174  2601               	addwf	?i2___wmul,f,c
  2925  000176  0E00               	movlw	0
  2926  000178  2202               	addwfc	?i2___wmul+1,f,c
  2927  00017A  0EC4               	movlw	low _READY_Queue
  2928  00017C  6E10               	movwf	(??_despachante+3)& (0+255),c
  2929  00017E  0E00               	movlw	high _READY_Queue
  2930  000180  6E11               	movwf	(??_despachante+4)& (0+255),c
  2931  000182  5001               	movf	?i2___wmul,w,c
  2932  000184  2610               	addwf	??_despachante+3,f,c
  2933  000186  5002               	movf	?i2___wmul+1,w,c
  2934  000188  2211               	addwfc	??_despachante+4,f,c
  2935  00018A  C015  F001         	movff	despachante@pos_queue,i2___wmul@multiplier
  2936  00018E  C016  F002         	movff	despachante@pos_queue+1,i2___wmul@multiplier+1
  2937  000192  0E00               	movlw	0
  2938  000194  6E04               	movwf	i2___wmul@multiplicand+1,c
  2939  000196  0E06               	movlw	6
  2940  000198  6E03               	movwf	i2___wmul@multiplicand,c
  2941  00019A  ECDD  F007         	call	i2___wmul	;wreg free
  2942  00019E  0E03               	movlw	3
  2943  0001A0  2601               	addwf	?i2___wmul,f,c
  2944  0001A2  0E00               	movlw	0
  2945  0001A4  2202               	addwfc	?i2___wmul+1,f,c
  2946  0001A6  5001               	movf	?i2___wmul,w,c
  2947  0001A8  2610               	addwf	??_despachante+3,f,c
  2948  0001AA  5002               	movf	?i2___wmul+1,w,c
  2949  0001AC  2211               	addwfc	??_despachante+4,f,c
  2950  0001AE  0E02               	movlw	2
  2951  0001B0  2410               	addwf	??_despachante+3,w,c
  2952  0001B2  6ED9               	movwf	fsr2l,c
  2953  0001B4  0E00               	movlw	0
  2954  0001B6  2011               	addwfc	??_despachante+4,w,c
  2955  0001B8  6EDA               	movwf	fsr2h,c
  2956  0001BA  C00D  FFDE         	movff	??_despachante,postinc2
  2957  0001BE  C00E  FFDD         	movff	??_despachante+1,postdec2
  2958  0001C2  C055  F001         	movff	_task_running,i2___wmul@multiplier
  2959  0001C6  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  2960  0001CA  0E00               	movlw	0
  2961  0001CC  6E04               	movwf	i2___wmul@multiplicand+1,c
  2962  0001CE  0EC8               	movlw	200
  2963  0001D0  6E03               	movwf	i2___wmul@multiplicand,c
  2964  0001D2  ECDD  F007         	call	i2___wmul	;wreg free
  2965  0001D6  0E09               	movlw	9
  2966  0001D8  2601               	addwf	?i2___wmul,f,c
  2967  0001DA  0E00               	movlw	0
  2968  0001DC  2202               	addwfc	?i2___wmul+1,f,c
  2969  0001DE  0EC4               	movlw	low _READY_Queue
  2970  0001E0  6E0D               	movwf	??_despachante& (0+255),c
  2971  0001E2  0E00               	movlw	high _READY_Queue
  2972  0001E4  6E0E               	movwf	(??_despachante+1)& (0+255),c
  2973  0001E6  5001               	movf	?i2___wmul,w,c
  2974  0001E8  260D               	addwf	??_despachante,f,c
  2975  0001EA  5002               	movf	?i2___wmul+1,w,c
  2976  0001EC  220E               	addwfc	??_despachante+1,f,c
  2977  0001EE  C015  F001         	movff	despachante@pos_queue,i2___wmul@multiplier
  2978  0001F2  C016  F002         	movff	despachante@pos_queue+1,i2___wmul@multiplier+1
  2979  0001F6  0E00               	movlw	0
  2980  0001F8  6E04               	movwf	i2___wmul@multiplicand+1,c
  2981  0001FA  0E06               	movlw	6
  2982  0001FC  6E03               	movwf	i2___wmul@multiplicand,c
  2983  0001FE  ECDD  F007         	call	i2___wmul	;wreg free
  2984  000202  0E03               	movlw	3
  2985  000204  2601               	addwf	?i2___wmul,f,c
  2986  000206  0E00               	movlw	0
  2987  000208  2202               	addwfc	?i2___wmul+1,f,c
  2988  00020A  5001               	movf	?i2___wmul,w,c
  2989  00020C  260D               	addwf	??_despachante,f,c
  2990  00020E  5002               	movf	?i2___wmul+1,w,c
  2991  000210  220E               	addwfc	??_despachante+1,f,c
  2992  000212  0E04               	movlw	4
  2993  000214  240D               	addwf	??_despachante,w,c
  2994  000216  6ED9               	movwf	fsr2l,c
  2995  000218  0E00               	movlw	0
  2996  00021A  200E               	addwfc	??_despachante+1,w,c
  2997  00021C  6EDA               	movwf	fsr2h,c
  2998  00021E  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2999  000222  CFFE FFDD          	movff	tosh,postdec2	;volatile
  3000  000226  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3001  00022A  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3002  00022E  0E00               	movlw	0
  3003  000230  6E04               	movwf	i2___wmul@multiplicand+1,c
  3004  000232  0EC8               	movlw	200
  3005  000234  6E03               	movwf	i2___wmul@multiplicand,c
  3006  000236  ECDD  F007         	call	i2___wmul	;wreg free
  3007  00023A  0EC6               	movlw	198
  3008  00023C  2601               	addwf	?i2___wmul,f,c
  3009  00023E  0E00               	movlw	0
  3010  000240  2202               	addwfc	?i2___wmul+1,f,c
  3011  000242  0EC4               	movlw	low _READY_Queue
  3012  000244  2401               	addwf	?i2___wmul,w,c
  3013  000246  6ED9               	movwf	fsr2l,c
  3014  000248  0E00               	movlw	high _READY_Queue
  3015  00024A  2002               	addwfc	?i2___wmul+1,w,c
  3016  00024C  6EDA               	movwf	fsr2h,c
  3017  00024E  2ADE               	incf	postinc2,f,c
  3018  000250  0E00               	movlw	0
  3019  000252  22DD               	addwfc	postdec2,f,c
  3020  000254  0006               	pop		;# 
  3021  000256  50FC               	movf	stkptr,w,c	;volatile
  3022  000258  A4D8               	btfss	status,2,c
  3023  00025A  D71F               	goto	i2l181
  3024                           
  3025                           ;kernel.c: 148: READY_Queue[task_running].task_state = STATE;
  3026  00025C  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3027  000260  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3028  000264  0E00               	movlw	0
  3029  000266  6E04               	movwf	i2___wmul@multiplicand+1,c
  3030  000268  0EC8               	movlw	200
  3031  00026A  6E03               	movwf	i2___wmul@multiplicand,c
  3032  00026C  ECDD  F007         	call	i2___wmul	;wreg free
  3033  000270  0E02               	movlw	2
  3034  000272  2601               	addwf	?i2___wmul,f,c
  3035  000274  0E00               	movlw	0
  3036  000276  2202               	addwfc	?i2___wmul+1,f,c
  3037  000278  0EC4               	movlw	low _READY_Queue
  3038  00027A  2401               	addwf	?i2___wmul,w,c
  3039  00027C  6ED9               	movwf	fsr2l,c
  3040  00027E  0E00               	movlw	high _READY_Queue
  3041  000280  2002               	addwfc	?i2___wmul+1,w,c
  3042  000282  6EDA               	movwf	fsr2h,c
  3043  000284  C014  FFDF         	movff	despachante@STATE,indf2
  3044                           
  3045                           ;kernel.c: 151: task_running = rr_scheduler();
  3046  000288  EC0E  F007         	call	_rr_scheduler	;wreg free
  3047  00028C  C007  F055         	movff	?_rr_scheduler,_task_running
  3048  000290  C008  F056         	movff	?_rr_scheduler+1,_task_running+1
  3049                           
  3050                           ;kernel.c: 156: READY_Queue[task_running].task_state = RUNNING;
  3051  000294  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3052  000298  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3053  00029C  0E00               	movlw	0
  3054  00029E  6E04               	movwf	i2___wmul@multiplicand+1,c
  3055  0002A0  0EC8               	movlw	200
  3056  0002A2  6E03               	movwf	i2___wmul@multiplicand,c
  3057  0002A4  ECDD  F007         	call	i2___wmul	;wreg free
  3058  0002A8  0E02               	movlw	2
  3059  0002AA  2601               	addwf	?i2___wmul,f,c
  3060  0002AC  0E00               	movlw	0
  3061  0002AE  2202               	addwfc	?i2___wmul+1,f,c
  3062  0002B0  0EC4               	movlw	low _READY_Queue
  3063  0002B2  2401               	addwf	?i2___wmul,w,c
  3064  0002B4  6ED9               	movwf	fsr2l,c
  3065  0002B6  0E00               	movlw	high _READY_Queue
  3066  0002B8  2002               	addwfc	?i2___wmul+1,w,c
  3067  0002BA  6EDA               	movwf	fsr2h,c
  3068  0002BC  0E01               	movlw	1
  3069  0002BE  6EDF               	movwf	indf2,c
  3070                           
  3071                           ;kernel.c: 158: do{ WREG = READY_Queue[task_running].ctx.WORK_reg; BSR = READY_Queue[tas
      +                          k_running].ctx.BSR_reg; STATUS = READY_Queue[task_running].ctx.STAT_reg; STKPTR = 0; do 
      +                          { int pos_queue = --READY_Queue[task_running].ctx.task_stack_size; asm("PUSH"); TOSU = R
      +                          EA
  3072  0002C0  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3073  0002C4  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3074  0002C8  0E00               	movlw	0
  3075  0002CA  6E04               	movwf	i2___wmul@multiplicand+1,c
  3076  0002CC  0EC8               	movlw	200
  3077  0002CE  6E03               	movwf	i2___wmul@multiplicand,c
  3078  0002D0  ECDD  F007         	call	i2___wmul	;wreg free
  3079  0002D4  0E09               	movlw	9
  3080  0002D6  2601               	addwf	?i2___wmul,f,c
  3081  0002D8  0E00               	movlw	0
  3082  0002DA  2202               	addwfc	?i2___wmul+1,f,c
  3083  0002DC  0EC4               	movlw	low _READY_Queue
  3084  0002DE  2401               	addwf	?i2___wmul,w,c
  3085  0002E0  6ED9               	movwf	fsr2l,c
  3086  0002E2  0E00               	movlw	high _READY_Queue
  3087  0002E4  2002               	addwfc	?i2___wmul+1,w,c
  3088  0002E6  6EDA               	movwf	fsr2h,c
  3089  0002E8  50DF               	movf	indf2,w,c
  3090  0002EA  6E0D               	movwf	??_despachante& (0+255),c
  3091  0002EC  500D               	movf	??_despachante,w,c
  3092  0002EE  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3093  0002F2  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3094  0002F6  0E00               	movlw	0
  3095  0002F8  6E04               	movwf	i2___wmul@multiplicand+1,c
  3096  0002FA  0EC8               	movlw	200
  3097  0002FC  6E03               	movwf	i2___wmul@multiplicand,c
  3098  0002FE  ECDD  F007         	call	i2___wmul	;wreg free
  3099  000302  0E0B               	movlw	11
  3100  000304  2601               	addwf	?i2___wmul,f,c
  3101  000306  0E00               	movlw	0
  3102  000308  2202               	addwfc	?i2___wmul+1,f,c
  3103  00030A  0EC4               	movlw	low _READY_Queue
  3104  00030C  2401               	addwf	?i2___wmul,w,c
  3105  00030E  6ED9               	movwf	fsr2l,c
  3106  000310  0E00               	movlw	high _READY_Queue
  3107  000312  2002               	addwfc	?i2___wmul+1,w,c
  3108  000314  6EDA               	movwf	fsr2h,c
  3109  000316  50DF               	movf	indf2,w,c
  3110  000318  6EE0               	movwf	bsr,c	;volatile
  3111  00031A  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3112  00031E  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3113  000322  0E00               	movlw	0
  3114  000324  6E04               	movwf	i2___wmul@multiplicand+1,c
  3115  000326  0EC8               	movlw	200
  3116  000328  6E03               	movwf	i2___wmul@multiplicand,c
  3117  00032A  ECDD  F007         	call	i2___wmul	;wreg free
  3118  00032E  0E0A               	movlw	10
  3119  000330  2601               	addwf	?i2___wmul,f,c
  3120  000332  0E00               	movlw	0
  3121  000334  2202               	addwfc	?i2___wmul+1,f,c
  3122  000336  0EC4               	movlw	low _READY_Queue
  3123  000338  2401               	addwf	?i2___wmul,w,c
  3124  00033A  6ED9               	movwf	fsr2l,c
  3125  00033C  0E00               	movlw	high _READY_Queue
  3126  00033E  2002               	addwfc	?i2___wmul+1,w,c
  3127  000340  6EDA               	movwf	fsr2h,c
  3128  000342  50DF               	movf	indf2,w,c
  3129  000344  6ED8               	movwf	status,c	;volatile
  3130  000346  0E00               	movlw	0
  3131  000348  6EFC               	movwf	stkptr,c	;volatile
  3132  00034A                     i2l1521:
  3133  00034A  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3134  00034E  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3135  000352  0E00               	movlw	0
  3136  000354  6E04               	movwf	i2___wmul@multiplicand+1,c
  3137  000356  0EC8               	movlw	200
  3138  000358  6E03               	movwf	i2___wmul@multiplicand,c
  3139  00035A  ECDD  F007         	call	i2___wmul	;wreg free
  3140  00035E  0EC6               	movlw	198
  3141  000360  2601               	addwf	?i2___wmul,f,c
  3142  000362  0E00               	movlw	0
  3143  000364  2202               	addwfc	?i2___wmul+1,f,c
  3144  000366  0EC4               	movlw	low _READY_Queue
  3145  000368  2401               	addwf	?i2___wmul,w,c
  3146  00036A  6ED9               	movwf	fsr2l,c
  3147  00036C  0E00               	movlw	high _READY_Queue
  3148  00036E  2002               	addwfc	?i2___wmul+1,w,c
  3149  000370  6EDA               	movwf	fsr2h,c
  3150  000372  06DE               	decf	postinc2,f,c
  3151  000374  0E00               	movlw	0
  3152  000376  5ADD               	subwfb	postdec2,f,c
  3153  000378  CFDE F017          	movff	postinc2,despachante@pos_queue_742
  3154  00037C  CFDD F018          	movff	postdec2,despachante@pos_queue_742+1
  3155  000380  0005               	push		;# 
  3156  000382  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3157  000386  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3158  00038A  0E00               	movlw	0
  3159  00038C  6E04               	movwf	i2___wmul@multiplicand+1,c
  3160  00038E  0EC8               	movlw	200
  3161  000390  6E03               	movwf	i2___wmul@multiplicand,c
  3162  000392  ECDD  F007         	call	i2___wmul	;wreg free
  3163  000396  0E09               	movlw	9
  3164  000398  2601               	addwf	?i2___wmul,f,c
  3165  00039A  0E00               	movlw	0
  3166  00039C  2202               	addwfc	?i2___wmul+1,f,c
  3167  00039E  0EC4               	movlw	low _READY_Queue
  3168  0003A0  6E0D               	movwf	??_despachante& (0+255),c
  3169  0003A2  0E00               	movlw	high _READY_Queue
  3170  0003A4  6E0E               	movwf	(??_despachante+1)& (0+255),c
  3171  0003A6  5001               	movf	?i2___wmul,w,c
  3172  0003A8  260D               	addwf	??_despachante,f,c
  3173  0003AA  5002               	movf	?i2___wmul+1,w,c
  3174  0003AC  220E               	addwfc	??_despachante+1,f,c
  3175  0003AE  C017  F001         	movff	despachante@pos_queue_742,i2___wmul@multiplier
  3176  0003B2  C018  F002         	movff	despachante@pos_queue_742+1,i2___wmul@multiplier+1
  3177  0003B6  0E00               	movlw	0
  3178  0003B8  6E04               	movwf	i2___wmul@multiplicand+1,c
  3179  0003BA  0E06               	movlw	6
  3180  0003BC  6E03               	movwf	i2___wmul@multiplicand,c
  3181  0003BE  ECDD  F007         	call	i2___wmul	;wreg free
  3182  0003C2  0E03               	movlw	3
  3183  0003C4  2601               	addwf	?i2___wmul,f,c
  3184  0003C6  0E00               	movlw	0
  3185  0003C8  2202               	addwfc	?i2___wmul+1,f,c
  3186  0003CA  5001               	movf	?i2___wmul,w,c
  3187  0003CC  240D               	addwf	??_despachante,w,c
  3188  0003CE  6ED9               	movwf	fsr2l,c
  3189  0003D0  5002               	movf	?i2___wmul+1,w,c
  3190  0003D2  200E               	addwfc	??_despachante+1,w,c
  3191  0003D4  6EDA               	movwf	fsr2h,c
  3192  0003D6  50DF               	movf	indf2,w,c
  3193  0003D8  6EFF               	movwf	tosu,c	;volatile
  3194  0003DA  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3195  0003DE  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3196  0003E2  0E00               	movlw	0
  3197  0003E4  6E04               	movwf	i2___wmul@multiplicand+1,c
  3198  0003E6  0EC8               	movlw	200
  3199  0003E8  6E03               	movwf	i2___wmul@multiplicand,c
  3200  0003EA  ECDD  F007         	call	i2___wmul	;wreg free
  3201  0003EE  0E09               	movlw	9
  3202  0003F0  2601               	addwf	?i2___wmul,f,c
  3203  0003F2  0E00               	movlw	0
  3204  0003F4  2202               	addwfc	?i2___wmul+1,f,c
  3205  0003F6  0EC4               	movlw	low _READY_Queue
  3206  0003F8  6E0D               	movwf	??_despachante& (0+255),c
  3207  0003FA  0E00               	movlw	high _READY_Queue
  3208  0003FC  6E0E               	movwf	(??_despachante+1)& (0+255),c
  3209  0003FE  5001               	movf	?i2___wmul,w,c
  3210  000400  260D               	addwf	??_despachante,f,c
  3211  000402  5002               	movf	?i2___wmul+1,w,c
  3212  000404  220E               	addwfc	??_despachante+1,f,c
  3213  000406  C017  F001         	movff	despachante@pos_queue_742,i2___wmul@multiplier
  3214  00040A  C018  F002         	movff	despachante@pos_queue_742+1,i2___wmul@multiplier+1
  3215  00040E  0E00               	movlw	0
  3216  000410  6E04               	movwf	i2___wmul@multiplicand+1,c
  3217  000412  0E06               	movlw	6
  3218  000414  6E03               	movwf	i2___wmul@multiplicand,c
  3219  000416  ECDD  F007         	call	i2___wmul	;wreg free
  3220  00041A  0E03               	movlw	3
  3221  00041C  2601               	addwf	?i2___wmul,f,c
  3222  00041E  0E00               	movlw	0
  3223  000420  2202               	addwfc	?i2___wmul+1,f,c
  3224  000422  5001               	movf	?i2___wmul,w,c
  3225  000424  260D               	addwf	??_despachante,f,c
  3226  000426  5002               	movf	?i2___wmul+1,w,c
  3227  000428  220E               	addwfc	??_despachante+1,f,c
  3228  00042A  0E02               	movlw	2
  3229  00042C  240D               	addwf	??_despachante,w,c
  3230  00042E  6ED9               	movwf	fsr2l,c
  3231  000430  0E00               	movlw	0
  3232  000432  200E               	addwfc	??_despachante+1,w,c
  3233  000434  6EDA               	movwf	fsr2h,c
  3234  000436  50DF               	movf	indf2,w,c
  3235  000438  6EFE               	movwf	tosh,c	;volatile
  3236  00043A  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3237  00043E  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3238  000442  0E00               	movlw	0
  3239  000444  6E04               	movwf	i2___wmul@multiplicand+1,c
  3240  000446  0EC8               	movlw	200
  3241  000448  6E03               	movwf	i2___wmul@multiplicand,c
  3242  00044A  ECDD  F007         	call	i2___wmul	;wreg free
  3243  00044E  0E09               	movlw	9
  3244  000450  2601               	addwf	?i2___wmul,f,c
  3245  000452  0E00               	movlw	0
  3246  000454  2202               	addwfc	?i2___wmul+1,f,c
  3247  000456  0EC4               	movlw	low _READY_Queue
  3248  000458  6E0D               	movwf	??_despachante& (0+255),c
  3249  00045A  0E00               	movlw	high _READY_Queue
  3250  00045C  6E0E               	movwf	(??_despachante+1)& (0+255),c
  3251  00045E  5001               	movf	?i2___wmul,w,c
  3252  000460  260D               	addwf	??_despachante,f,c
  3253  000462  5002               	movf	?i2___wmul+1,w,c
  3254  000464  220E               	addwfc	??_despachante+1,f,c
  3255  000466  C017  F001         	movff	despachante@pos_queue_742,i2___wmul@multiplier
  3256  00046A  C018  F002         	movff	despachante@pos_queue_742+1,i2___wmul@multiplier+1
  3257  00046E  0E00               	movlw	0
  3258  000470  6E04               	movwf	i2___wmul@multiplicand+1,c
  3259  000472  0E06               	movlw	6
  3260  000474  6E03               	movwf	i2___wmul@multiplicand,c
  3261  000476  ECDD  F007         	call	i2___wmul	;wreg free
  3262  00047A  0E03               	movlw	3
  3263  00047C  2601               	addwf	?i2___wmul,f,c
  3264  00047E  0E00               	movlw	0
  3265  000480  2202               	addwfc	?i2___wmul+1,f,c
  3266  000482  5001               	movf	?i2___wmul,w,c
  3267  000484  260D               	addwf	??_despachante,f,c
  3268  000486  5002               	movf	?i2___wmul+1,w,c
  3269  000488  220E               	addwfc	??_despachante+1,f,c
  3270  00048A  0E04               	movlw	4
  3271  00048C  240D               	addwf	??_despachante,w,c
  3272  00048E  6ED9               	movwf	fsr2l,c
  3273  000490  0E00               	movlw	0
  3274  000492  200E               	addwfc	??_despachante+1,w,c
  3275  000494  6EDA               	movwf	fsr2h,c
  3276  000496  50DF               	movf	indf2,w,c
  3277  000498  6EFD               	movwf	tosl,c	;volatile
  3278  00049A  C055  F001         	movff	_task_running,i2___wmul@multiplier
  3279  00049E  C056  F002         	movff	_task_running+1,i2___wmul@multiplier+1
  3280  0004A2  0E00               	movlw	0
  3281  0004A4  6E04               	movwf	i2___wmul@multiplicand+1,c
  3282  0004A6  0EC8               	movlw	200
  3283  0004A8  6E03               	movwf	i2___wmul@multiplicand,c
  3284  0004AA  ECDD  F007         	call	i2___wmul	;wreg free
  3285  0004AE  0EC6               	movlw	198
  3286  0004B0  2601               	addwf	?i2___wmul,f,c
  3287  0004B2  0E00               	movlw	0
  3288  0004B4  2202               	addwfc	?i2___wmul+1,f,c
  3289  0004B6  0EC4               	movlw	low _READY_Queue
  3290  0004B8  2401               	addwf	?i2___wmul,w,c
  3291  0004BA  6ED9               	movwf	fsr2l,c
  3292  0004BC  0E00               	movlw	high _READY_Queue
  3293  0004BE  2002               	addwfc	?i2___wmul+1,w,c
  3294  0004C0  6EDA               	movwf	fsr2h,c
  3295  0004C2  50DE               	movf	postinc2,w,c
  3296  0004C4  10DE               	iorwf	postinc2,w,c
  3297  0004C6  A4D8               	btfss	status,2,c
  3298  0004C8  D740               	goto	i2l1521
  3299                           
  3300                           ;kernel.c: 159: INTCONbits.GIE = 1;
  3301  0004CA  8EF2               	bsf	intcon,7,c	;volatile
  3302  0004CC  0012               	return		;funcret
  3303  0004CE                     __end_of_despachante:
  3304                           	opt stack 0
  3305                           tosu	equ	0xFFF
  3306                           tosh	equ	0xFFE
  3307                           tosl	equ	0xFFD
  3308                           stkptr	equ	0xFFC
  3309                           pclatu	equ	0xFFB
  3310                           pclath	equ	0xFFA
  3311                           tblptru	equ	0xFF8
  3312                           tblptrh	equ	0xFF7
  3313                           tblptrl	equ	0xFF6
  3314                           tablat	equ	0xFF5
  3315                           prodh	equ	0xFF4
  3316                           prodl	equ	0xFF3
  3317                           intcon	equ	0xFF2
  3318                           postinc0	equ	0xFEE
  3319                           fsr0h	equ	0xFEA
  3320                           fsr0l	equ	0xFE9
  3321                           wreg	equ	0xFE8
  3322                           postdec1	equ	0xFE5
  3323                           fsr1h	equ	0xFE2
  3324                           fsr1l	equ	0xFE1
  3325                           bsr	equ	0xFE0
  3326                           indf2	equ	0xFDF
  3327                           postinc2	equ	0xFDE
  3328                           postdec2	equ	0xFDD
  3329                           plusw2	equ	0xFDB
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8
  3333                           
  3334 ;; *************** function _rr_scheduler *****************
  3335 ;; Defined at:
  3336 ;;		line 78 in file "kernel.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  next_task       2   10[COMRAM] unsigned int 
  3341 ;;  i               2    8[COMRAM] unsigned int 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  2    6[COMRAM] unsigned int 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3351 ;;      Params:         2       0       0       0       0       0       0
  3352 ;;      Locals:         4       0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0
  3354 ;;      Totals:         6       0       0       0       0       0       0
  3355 ;;Total ram usage:        6 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    1
  3358 ;; This function calls:
  3359 ;;		___lwmod
  3360 ;;		i2___wmul
  3361 ;; This function is called by:
  3362 ;;		_despachante
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text15
  3367  000E1C                     __ptext15:
  3368                           	opt stack 0
  3369  000E1C                     _rr_scheduler:
  3370                           	opt stack 21
  3371                           
  3372                           ;kernel.c: 91: u_int i = task_running, next_task = 0;
  3373                           
  3374                           ;incstack = 0
  3375  000E1C  C055  F009         	movff	_task_running,rr_scheduler@i
  3376  000E20  C056  F00A         	movff	_task_running+1,rr_scheduler@i+1
  3377  000E24  0E00               	movlw	0
  3378  000E26  6E0C               	movwf	rr_scheduler@next_task+1,c
  3379  000E28  0E00               	movlw	0
  3380  000E2A  6E0B               	movwf	rr_scheduler@next_task,c
  3381  000E2C                     i2l1449:
  3382                           
  3383                           ;kernel.c: 94: i++;
  3384  000E2C  4A09               	infsnz	rr_scheduler@i,f,c
  3385  000E2E  2A0A               	incf	rr_scheduler@i+1,f,c
  3386                           
  3387                           ;kernel.c: 95: next_task = i % (tasks_installed);
  3388  000E30  C009  F001         	movff	rr_scheduler@i,___lwmod@dividend
  3389  000E34  C00A  F002         	movff	rr_scheduler@i+1,___lwmod@dividend+1
  3390  000E38  C053  F003         	movff	_tasks_installed,___lwmod@divisor
  3391  000E3C  C054  F004         	movff	_tasks_installed+1,___lwmod@divisor+1
  3392  000E40  EC74  F007         	call	___lwmod	;wreg free
  3393  000E44  C001  F00B         	movff	?___lwmod,rr_scheduler@next_task
  3394  000E48  C002  F00C         	movff	?___lwmod+1,rr_scheduler@next_task+1
  3395                           
  3396                           ;kernel.c: 96: }while(READY_Queue[next_task].task_state != READY);
  3397  000E4C  C00B  F001         	movff	rr_scheduler@next_task,i2___wmul@multiplier
  3398  000E50  C00C  F002         	movff	rr_scheduler@next_task+1,i2___wmul@multiplier+1
  3399  000E54  0E00               	movlw	0
  3400  000E56  6E04               	movwf	i2___wmul@multiplicand+1,c
  3401  000E58  0EC8               	movlw	200
  3402  000E5A  6E03               	movwf	i2___wmul@multiplicand,c
  3403  000E5C  ECDD  F007         	call	i2___wmul	;wreg free
  3404  000E60  0E02               	movlw	2
  3405  000E62  2601               	addwf	?i2___wmul,f,c
  3406  000E64  0E00               	movlw	0
  3407  000E66  2202               	addwfc	?i2___wmul+1,f,c
  3408  000E68  0EC4               	movlw	low _READY_Queue
  3409  000E6A  2401               	addwf	?i2___wmul,w,c
  3410  000E6C  6ED9               	movwf	fsr2l,c
  3411  000E6E  0E00               	movlw	high _READY_Queue
  3412  000E70  2002               	addwfc	?i2___wmul+1,w,c
  3413  000E72  6EDA               	movwf	fsr2h,c
  3414  000E74  50DF               	movf	indf2,w,c
  3415  000E76  A4D8               	btfss	status,2,c
  3416  000E78  D7D9               	goto	i2l1449
  3417                           
  3418                           ;kernel.c: 98: return next_task;
  3419  000E7A  C00B  F007         	movff	rr_scheduler@next_task,?_rr_scheduler
  3420  000E7E  C00C  F008         	movff	rr_scheduler@next_task+1,?_rr_scheduler+1
  3421  000E82  0012               	return		;funcret
  3422  000E84                     __end_of_rr_scheduler:
  3423                           	opt stack 0
  3424                           tosu	equ	0xFFF
  3425                           tosh	equ	0xFFE
  3426                           tosl	equ	0xFFD
  3427                           stkptr	equ	0xFFC
  3428                           pclatu	equ	0xFFB
  3429                           pclath	equ	0xFFA
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           intcon	equ	0xFF2
  3437                           postinc0	equ	0xFEE
  3438                           fsr0h	equ	0xFEA
  3439                           fsr0l	equ	0xFE9
  3440                           wreg	equ	0xFE8
  3441                           postdec1	equ	0xFE5
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           bsr	equ	0xFE0
  3445                           indf2	equ	0xFDF
  3446                           postinc2	equ	0xFDE
  3447                           postdec2	equ	0xFDD
  3448                           plusw2	equ	0xFDB
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8
  3452                           
  3453 ;; *************** function i2___wmul *****************
  3454 ;; Defined at:
  3455 ;;		line 15 in file "D:\Programas\MPLABX\xc8\sources\common\Umul16.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  multiplier      2    0[COMRAM] unsigned int 
  3458 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  __wmul          2    4[COMRAM] unsigned int 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  2    0[COMRAM] unsigned int 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, prodl, prodh
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3470 ;;      Params:         4       0       0       0       0       0       0
  3471 ;;      Locals:         2       0       0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0
  3473 ;;      Totals:         6       0       0       0       0       0       0
  3474 ;;Total ram usage:        6 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_rr_scheduler
  3480 ;;		_despachante
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text16
  3485  000FBA                     __ptext16:
  3486                           	opt stack 0
  3487  000FBA                     i2___wmul:
  3488                           	opt stack 22
  3489                           
  3490                           ;incstack = 0
  3491  000FBA  5001               	movf	i2___wmul@multiplier,w,c
  3492  000FBC  0203               	mulwf	i2___wmul@multiplicand,c
  3493  000FBE  CFF3 F005          	movff	prodl,i2___wmul@product
  3494  000FC2  CFF4 F006          	movff	prodh,i2___wmul@product+1
  3495  000FC6  5001               	movf	i2___wmul@multiplier,w,c
  3496  000FC8  0204               	mulwf	i2___wmul@multiplicand+1,c
  3497  000FCA  50F3               	movf	prodl,w,c
  3498  000FCC  2606               	addwf	i2___wmul@product+1,f,c
  3499  000FCE  5002               	movf	i2___wmul@multiplier+1,w,c
  3500  000FD0  0203               	mulwf	i2___wmul@multiplicand,c
  3501  000FD2  50F3               	movf	prodl,w,c
  3502  000FD4  2606               	addwf	i2___wmul@product+1,f,c
  3503  000FD6  C005  F001         	movff	i2___wmul@product,?i2___wmul
  3504  000FDA  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  3505  000FDE  0012               	return	
  3506  000FE0                     __end_ofi2___wmul:
  3507                           	opt stack 0
  3508                           tosu	equ	0xFFF
  3509                           tosh	equ	0xFFE
  3510                           tosl	equ	0xFFD
  3511                           stkptr	equ	0xFFC
  3512                           pclatu	equ	0xFFB
  3513                           pclath	equ	0xFFA
  3514                           tblptru	equ	0xFF8
  3515                           tblptrh	equ	0xFF7
  3516                           tblptrl	equ	0xFF6
  3517                           tablat	equ	0xFF5
  3518                           prodh	equ	0xFF4
  3519                           prodl	equ	0xFF3
  3520                           intcon	equ	0xFF2
  3521                           postinc0	equ	0xFEE
  3522                           fsr0h	equ	0xFEA
  3523                           fsr0l	equ	0xFE9
  3524                           wreg	equ	0xFE8
  3525                           postdec1	equ	0xFE5
  3526                           fsr1h	equ	0xFE2
  3527                           fsr1l	equ	0xFE1
  3528                           bsr	equ	0xFE0
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           postdec2	equ	0xFDD
  3532                           plusw2	equ	0xFDB
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537 ;; *************** function ___lwmod *****************
  3538 ;; Defined at:
  3539 ;;		line 8 in file "D:\Programas\MPLABX\xc8\sources\common\lwmod.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  dividend        2    0[COMRAM] unsigned int 
  3542 ;;  divisor         2    2[COMRAM] unsigned int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  counter         1    4[COMRAM] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2    0[COMRAM] unsigned int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         4       0       0       0       0       0       0
  3555 ;;      Locals:         1       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0
  3557 ;;      Totals:         5       0       0       0       0       0       0
  3558 ;;Total ram usage:        5 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_rr_scheduler
  3564 ;;		_sem_post
  3565 ;;		_write_queue
  3566 ;;		_read_queue
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text17
  3571  000EE8                     __ptext17:
  3572                           	opt stack 0
  3573  000EE8                     ___lwmod:
  3574                           	opt stack 21
  3575                           
  3576                           ;incstack = 0
  3577  000EE8  5003               	movf	___lwmod@divisor,w,c
  3578  000EEA  1004               	iorwf	___lwmod@divisor+1,w,c
  3579  000EEC  B4D8               	btfsc	status,2,c
  3580  000EEE  D018               	goto	i2l676
  3581  000EF0  0E01               	movlw	1
  3582  000EF2  6E05               	movwf	___lwmod@counter,c
  3583  000EF4  D004               	goto	i2l1425
  3584  000EF6                     i2l1423:
  3585  000EF6  90D8               	bcf	status,0,c
  3586  000EF8  3603               	rlcf	___lwmod@divisor,f,c
  3587  000EFA  3604               	rlcf	___lwmod@divisor+1,f,c
  3588  000EFC  2A05               	incf	___lwmod@counter,f,c
  3589  000EFE                     i2l1425:
  3590  000EFE  AE04               	btfss	___lwmod@divisor+1,7,c
  3591  000F00  D7FA               	goto	i2l1423
  3592  000F02                     i2l1427:
  3593  000F02  5003               	movf	___lwmod@divisor,w,c
  3594  000F04  5C01               	subwf	___lwmod@dividend,w,c
  3595  000F06  5004               	movf	___lwmod@divisor+1,w,c
  3596  000F08  5802               	subwfb	___lwmod@dividend+1,w,c
  3597  000F0A  A0D8               	btfss	status,0,c
  3598  000F0C  D004               	goto	i2l1431
  3599  000F0E  5003               	movf	___lwmod@divisor,w,c
  3600  000F10  5E01               	subwf	___lwmod@dividend,f,c
  3601  000F12  5004               	movf	___lwmod@divisor+1,w,c
  3602  000F14  5A02               	subwfb	___lwmod@dividend+1,f,c
  3603  000F16                     i2l1431:
  3604  000F16  90D8               	bcf	status,0,c
  3605  000F18  3204               	rrcf	___lwmod@divisor+1,f,c
  3606  000F1A  3203               	rrcf	___lwmod@divisor,f,c
  3607  000F1C  2E05               	decfsz	___lwmod@counter,f,c
  3608  000F1E  D7F1               	goto	i2l1427
  3609  000F20                     i2l676:
  3610  000F20  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3611  000F24  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3612  000F28  0012               	return		;funcret
  3613  000F2A                     __end_of___lwmod:
  3614                           	opt stack 0
  3615  0000                     tosu	equ	0xFFF
  3616                           tosh	equ	0xFFE
  3617                           tosl	equ	0xFFD
  3618                           stkptr	equ	0xFFC
  3619                           pclatu	equ	0xFFB
  3620                           pclath	equ	0xFFA
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           prodh	equ	0xFF4
  3626                           prodl	equ	0xFF3
  3627                           intcon	equ	0xFF2
  3628                           postinc0	equ	0xFEE
  3629                           fsr0h	equ	0xFEA
  3630                           fsr0l	equ	0xFE9
  3631                           wreg	equ	0xFE8
  3632                           postdec1	equ	0xFE5
  3633                           fsr1h	equ	0xFE2
  3634                           fsr1l	equ	0xFE1
  3635                           bsr	equ	0xFE0
  3636                           indf2	equ	0xFDF
  3637                           postinc2	equ	0xFDE
  3638                           postdec2	equ	0xFDD
  3639                           plusw2	equ	0xFDB
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           tosu	equ	0xFFF
  3644                           tosh	equ	0xFFE
  3645                           tosl	equ	0xFFD
  3646                           stkptr	equ	0xFFC
  3647                           pclatu	equ	0xFFB
  3648                           pclath	equ	0xFFA
  3649                           tblptru	equ	0xFF8
  3650                           tblptrh	equ	0xFF7
  3651                           tblptrl	equ	0xFF6
  3652                           tablat	equ	0xFF5
  3653                           prodh	equ	0xFF4
  3654                           prodl	equ	0xFF3
  3655                           intcon	equ	0xFF2
  3656                           postinc0	equ	0xFEE
  3657                           fsr0h	equ	0xFEA
  3658                           fsr0l	equ	0xFE9
  3659                           wreg	equ	0xFE8
  3660                           postdec1	equ	0xFE5
  3661                           fsr1h	equ	0xFE2
  3662                           fsr1l	equ	0xFE1
  3663                           bsr	equ	0xFE0
  3664                           indf2	equ	0xFDF
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           plusw2	equ	0xFDB
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672                           	psect	text18
  3673  000000                     __ptext18:
  3674                           	opt stack 0
  3675                           tosu	equ	0xFFF
  3676                           tosh	equ	0xFFE
  3677                           tosl	equ	0xFFD
  3678                           stkptr	equ	0xFFC
  3679                           pclatu	equ	0xFFB
  3680                           pclath	equ	0xFFA
  3681                           tblptru	equ	0xFF8
  3682                           tblptrh	equ	0xFF7
  3683                           tblptrl	equ	0xFF6
  3684                           tablat	equ	0xFF5
  3685                           prodh	equ	0xFF4
  3686                           prodl	equ	0xFF3
  3687                           intcon	equ	0xFF2
  3688                           postinc0	equ	0xFEE
  3689                           fsr0h	equ	0xFEA
  3690                           fsr0l	equ	0xFE9
  3691                           wreg	equ	0xFE8
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           bsr	equ	0xFE0
  3696                           indf2	equ	0xFDF
  3697                           postinc2	equ	0xFDE
  3698                           postdec2	equ	0xFDD
  3699                           plusw2	equ	0xFDB
  3700                           fsr2h	equ	0xFDA
  3701                           fsr2l	equ	0xFD9
  3702                           status	equ	0xFD8
  3703                           
  3704                           	psect	rparam
  3705  0000                     tosu	equ	0xFFF
  3706                           tosh	equ	0xFFE
  3707                           tosl	equ	0xFFD
  3708                           stkptr	equ	0xFFC
  3709                           pclatu	equ	0xFFB
  3710                           pclath	equ	0xFFA
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           prodh	equ	0xFF4
  3716                           prodl	equ	0xFF3
  3717                           intcon	equ	0xFF2
  3718                           postinc0	equ	0xFEE
  3719                           fsr0h	equ	0xFEA
  3720                           fsr0l	equ	0xFE9
  3721                           wreg	equ	0xFE8
  3722                           postdec1	equ	0xFE5
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           bsr	equ	0xFE0
  3726                           indf2	equ	0xFDF
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           plusw2	equ	0xFDB
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734                           	psect	temp
  3735  000059                     btemp:
  3736                           	opt stack 0
  3737  000059                     	ds	1
  3738  0000                     int$flags	set	btemp
  3739                           tosu	equ	0xFFF
  3740                           tosh	equ	0xFFE
  3741                           tosl	equ	0xFFD
  3742                           stkptr	equ	0xFFC
  3743                           pclatu	equ	0xFFB
  3744                           pclath	equ	0xFFA
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           intcon	equ	0xFF2
  3752                           postinc0	equ	0xFEE
  3753                           fsr0h	equ	0xFEA
  3754                           fsr0l	equ	0xFE9
  3755                           wreg	equ	0xFE8
  3756                           postdec1	equ	0xFE5
  3757                           fsr1h	equ	0xFE2
  3758                           fsr1l	equ	0xFE1
  3759                           bsr	equ	0xFE0
  3760                           indf2	equ	0xFDF
  3761                           postinc2	equ	0xFDE
  3762                           postdec2	equ	0xFDD
  3763                           plusw2	equ	0xFDB
  3764                           fsr2h	equ	0xFDA
  3765                           fsr2l	equ	0xFD9
  3766                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1360
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     64      88
    BANK0           128     44      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sp__read_queue	PTR void  size(2) Largest target is 0

    read_queue@q.queue_buffer	PTR void [10] size(2) Largest target is 0

    write_queue@q.queue_buffer	PTR void [10] size(2) Largest target is 0

    S837queue$queue_buffer	PTR void [10] size(2) Largest target is 0

    create_queue@q.queue_buffer	PTR void [10] size(2) Largest target is 0

    macos_create_task@t_ptr	PTR FTN()void  size(2) Largest target is 1
		 -> task_IDLE(), tarefa_tres(), tarefa_dois(), tarefa_um(), 

    S588tcb$func	PTR FTN()void  size(2) Largest target is 1
		 -> task_IDLE(), tarefa_tres(), tarefa_dois(), tarefa_um(), 

    READY_Queue.func	PTR FTN()void  size(2) Largest target is 1
		 -> task_IDLE(), tarefa_tres(), tarefa_dois(), tarefa_um(), 

    ptr_speed	PTR unsigned int  size(2) Largest target is 22
		 -> NULL(NULL[0]), shared_memory(BANK0[22]), 

    ptr_shared_memory	PTR unsigned int  size(2) Largest target is 22
		 -> NULL(NULL[0]), shared_memory(BANK0[22]), 


Critical Paths under _main in COMRAM

    _main->_macos_create_task
    _macos_start->_macos_create_task
    _macos_create_task->___wmul

Critical Paths under _tarefa_um in COMRAM

    _tarefa_um->___ftdiv
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _tarefa_dois in COMRAM

    None.

Critical Paths under _tarefa_tres in COMRAM

    None.

Critical Paths under _task_IDLE in COMRAM

    None.

Critical Paths under _task_IDLE in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_despachante
    _despachante->_rr_scheduler
    _rr_scheduler->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _tarefa_um in BANK0

    _tarefa_um->___fttol
    ___fttol->___ftmul

Critical Paths under _tarefa_dois in BANK0

    None.

Critical Paths under _tarefa_tres in BANK0

    None.

Critical Paths under _task_IDLE in BANK0

    None.

Critical Paths under _task_IDLE in BANK0

    None.

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tarefa_um in BANK1

    None.

Critical Paths under _tarefa_dois in BANK1

    None.

Critical Paths under _tarefa_tres in BANK1

    None.

Critical Paths under _task_IDLE in BANK1

    None.

Critical Paths under _task_IDLE in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tarefa_um in BANK2

    None.

Critical Paths under _tarefa_dois in BANK2

    None.

Critical Paths under _tarefa_tres in BANK2

    None.

Critical Paths under _task_IDLE in BANK2

    None.

Critical Paths under _task_IDLE in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tarefa_um in BANK3

    None.

Critical Paths under _tarefa_dois in BANK3

    None.

Critical Paths under _tarefa_tres in BANK3

    None.

Critical Paths under _task_IDLE in BANK3

    None.

Critical Paths under _task_IDLE in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tarefa_um in BANK4

    None.

Critical Paths under _tarefa_dois in BANK4

    None.

Critical Paths under _tarefa_tres in BANK4

    None.

Critical Paths under _task_IDLE in BANK4

    None.

Critical Paths under _task_IDLE in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tarefa_um in BANK5

    None.

Critical Paths under _tarefa_dois in BANK5

    None.

Critical Paths under _tarefa_tres in BANK5

    None.

Critical Paths under _task_IDLE in BANK5

    None.

Critical Paths under _task_IDLE in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13326
                  _macos_create_task
                        _macos_start
 ---------------------------------------------------------------------------------
 (1) _macos_start                                          0     0      0    6663
                  _macos_create_task
 ---------------------------------------------------------------------------------
 (2) _macos_create_task                                   10     4      6    6663
                                              6 COMRAM    10     4      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    5597
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_um                                           10    10      0   11022
                                             30 BANK0     10    10      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             3     0      3    2954
                                             46 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     461
                                             15 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3641
                                              0 BANK0     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    3573
                                             49 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2833
                                             38 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_dois                                          2     2      0       0
                                             40 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_tres                                          2     2      0       0
                                             42 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_IDLE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_IDLE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                   14    14      0    3907
                                             24 COMRAM    14    14      0
                        _despachante
 ---------------------------------------------------------------------------------
 (8) _despachante                                         12    12      0    3907
                                             12 COMRAM    12    12      0
                       _rr_scheduler
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2294
                                              6 COMRAM     6     4      2
                            ___lwmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4    1457
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___lwmod                                             5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _macos_create_task
     ___wmul
   _macos_start
     _macos_create_task
       ___wmul

 _tarefa_um (ROOT)
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack

 _tarefa_dois (ROOT)

 _tarefa_tres (ROOT)

 _task_IDLE (ROOT)

 _task_IDLE (ROOT)

 _interrupt_handler (ROOT)
   _despachante
     _rr_scheduler
       ___lwmod
       i2___wmul
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     520      17       85.5%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2C      44       5       53.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     40      58       1       69.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      15        0.0%
DATA                 0      0     5BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jun 10 23:53:12 2017

                        l25 0EE6                          l71 080E                          l66 06D4  
                        l84 0BF8                          l77 0BAA                          l79 0BB2  
                        l89 0C3E                          l98 0DCA  __size_of_macos_create_task 01E2  
       ___wmul@multiplicand 0003                 __CFG_OSC$HS 000000                         l101 0DF4  
                       _BSR 000FE0                         _PR2 000FCB                         u740 05CC  
                       u745 05C2                         _TOS 000FFD                         wreg 000FE8  
              ?_macos_start 0001               rr_scheduler@i 0009                ___ftdiv@cntr 003B  
              ___ftdiv@sign 0040                __CFG_WDT$OFF 000000                        l2061 07A8  
                      l2055 075A                        l2047 06D2                        l1731 0C56  
                      l1723 0C10                        l1715 0BCA                        l1741 0DDC  
                      l1745 0DFE                        _TMR0 000FD6                        _TOSH 000FFE  
                      _TOSL 000FFD                        _WREG 000FE8                        _TOSU 000FFF  
      tarefa_um@currentTemp 00A4                        _main 0E84                ___ftpack@arg 0027  
              ___ftpack@exp 002A                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr2h 000FDA                        fsr0l 000FE9                        indf2 000FDF  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 0059  
                      prodh 000FF4                        prodl 000FF3                        start 000E  
              ___ftmul@cntr 008D                ___param_bank 000000                ___ftmul@sign 008E  
              ___fttol@exp1 009D                ___fttol@lval 0099                       ?_main 0001  
           _tasks_installed 0053                       _CCPR1 000FBE             __end_of___ftdiv 0B9E  
           __end_of___ftmul 0974             __end_of___fttol 0AB8             __end_of___lwmod 0F2A  
                     i1l546 0B6C                       i2l181 009A                       i1l488 0D02  
                     i2l194 0D72                       i2l676 0F20              tarefa_um@value 00A0  
             ___ftpack@sign 002B                       pclath 000FFA                       tablat 000FF5  
          __end_ofi2___wmul 0FE0                       plusw2 000FDB                       status 000FD8  
           __initialization 0F2A                __end_of_main 0EE8           _tasks_delay_queue 0051  
                    ??_main 0011               ___fttol@sign1 0098               __activetblptr 000000  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
      __size_of_despachante 04BC                      _ADRESH 000FC4                ?_tarefa_dois 0001  
          __end_of___ftpack 0D22                ?_tarefa_tres 0001                      u110_20 0BE0  
                    i1l2011 0A40                      i1l2021 0A70                      i1l2023 0A80  
                    i1l2015 0A54                      i1l2025 0A8A                      i1l2029 0AA6  
                    u112_20 0C26                      i1l1841 0C84                      i1l1905 0B08  
                    i1l1853 0CD0                      i1l1845 0C92                      i1l1925 0B46  
                    i1l1855 0CEE                      i1l1847 0C9C                      i1l1951 088A  
                    i1l1857 0CF8                      i1l1849 0CBA                      i1l1945 0850  
                    i1l1965 08D8                      i2l1431 0F16                      i2l1423 0EF6  
                    i1l1975 0916                      u116_20 0E14                      i2l1425 0EFE  
                    i2l1521 034A                      i1l1969 08F6                      i1l1993 09AE  
                    i2l1427 0F02                      i1l1899 0AE0                      i1l1979 0934  
                    i2l1449 0E2C                      u142_21 082C                      u144_21 0866  
                    u137_21 0AC8                      u139_21 0AF0                      u148_21 098A  
                    u159_20 07BE            __end_of___lwtoft 1004                      _STATUS 000FD8  
                    _STKPTR 000FFC                      ___wmul 0F94                   ??___ftdiv 0038  
                 ??___ftmul 0086                   ??___fttol 0093                   ??___lwmod 0005  
                    clear_0 0F32                      clear_1 0F44                      clear_2 0F50  
     ___ftmul@f3_as_product 008A                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8        __size_of_macos_start 0034                  __accesstop 0080  
   __end_of__initialization 0F56               ___rparam_used 000001                  ___ftdiv@f1 0032  
                ___ftdiv@f2 0035                  ___ftdiv@f3 003C                  ___ftmul@f1 0080  
                ___ftmul@f2 0083                  ___fttol@f1 008F              __pcstackCOMRAM 0001  
                ___lwtoft@c 002F                   ?i2___wmul 0001                  __pbssBANK0 00AC  
             __uDynamicHeap 03E4                     ?___wmul 0001          __size_of_task_IDLE 0008  
        __size_of_tarefa_um 0166        despachante@pos_queue 0015                   ?___ftpack 0027  
                 ?___lwtoft 002F                  ??i2___wmul 0005                     i2u84_40 00E8  
                   i2u84_45 00E0        __size_of_tarefa_dois 00D6        __size_of_tarefa_tres 006E  
                   __Hparam 0000                     __Lparam 0000                     ___ftdiv 0AB8  
           __size_of___wmul 0026                     ___ftmul 0816                     ___fttol 0974  
     tarefa_um@previousTemp 00A2                     ___lwmod 0EE8                     __pcinit 0F2A  
                ??___ftpack 002C                     __ramtop 0600                     __ptext0 0E84  
                   __ptext1 0F60                     __ptext2 04CE                     __ptext3 0F94  
                   __ptext4 06B0                     __ptext5 0FE0                     __ptext6 0974  
                   __ptext7 0816                     __ptext8 0AB8                     __ptext9 0C74  
                ??___lwtoft 0032                   _T0CONbits 000FD5                   _T2CONbits 000FCA  
            __pintcode_body 0D22        end_of_initialization 0F56           __end_of_task_IDLE 100C  
         __end_of_tarefa_um 0816                     int_func 0D22         i2___wmul@multiplier 0001  
                   postdec1 000FE5                     postdec2 000FDD               ?_rr_scheduler 0007  
                   postinc0 000FEE                     postinc2 000FDE                   _PORTBbits 000F81  
                 _PORTCbits 000F82               ??_despachante 000D                   _TRISAbits 000F92  
                 _TRISBbits 000F93                   _TRISCbits 000F94           _ptr_shared_memory 00AC  
               _CCP1CONbits 000FBD                 ___ftdiv@exp 003F                 ___ftmul@exp 0089  
            ??_rr_scheduler 0009              __end_of___wmul 0FBA    despachante@pos_queue_742 0017  
          i2___wmul@product 0005         start_initialization 0F2A               ??_macos_start 0011  
         __size_ofi2___wmul 0026         __end_of_despachante 04CE                 _DELAY_Queue 0041  
                  ??___wmul 0005           __size_of___ftpack 00AE                 __pbssBIGRAM 00C4  
               __pbssCOMRAM 0041           __size_of___lwtoft 0024               __pcstackBANK0 0080  
             _shared_memory 00AE         __end_of_macos_start 0F94                   __pintcode 0008  
                  ?___ftdiv 0032                    ?___ftmul 0080                    ?___fttol 008F  
                  ?___lwmod 0001           _interrupt_handler 0008                  tarefa_um@i 00A6  
               _despachante 0012          ?_interrupt_handler 0001        __end_of_rr_scheduler 0E84  
             ??_tarefa_dois 00A8               ??_tarefa_tres 00AA         ??_interrupt_handler 0019  
            ___wmul@product 0005                   _task_IDLE 1004                   _tarefa_um 06B0  
                  i1u150_20 09D4                    i1u150_25 09CA   __end_of_interrupt_handler 0DAE  
                _ADCON0bits 000FC2                   _ptr_speed 0057           ___wmul@multiplier 0001  
          despachante@STATE 0014                    i2___wmul 0FBA                 _macos_start 0F60  
                ?_task_IDLE 0001         __end_of_tarefa_dois 0C74         __end_of_tarefa_tres 0E1C  
                ?_tarefa_um 0001                    __Hrparam 0000                    __Lrparam 0000  
               _READY_Queue 00C4      macos_create_task@t_ptr 000B      macos_create_task@prior 0009  
          __size_of___ftdiv 00E6       i2___wmul@multiplicand 0003            __size_of___ftmul 015E  
          __size_of___fttol 0144            __size_of___lwmod 0042                    ___ftpack 0C74  
     rr_scheduler@next_task 000B           _macos_create_task 04CE                    ___lwtoft 0FE0  
        ?_macos_create_task 0007                    __ptext10 0B9E                    __ptext11 0DAE  
                  __ptext12 1004                    __ptext14 0012                    __ptext15 0E1C  
                  __ptext16 0FBA                    __ptext17 0EE8                    __ptext18 0000  
       ??_macos_create_task 000D         macos_create_task@id 0007               __size_of_main 0064  
              _task_running 0055                    int$flags 0059   __end_of_macos_create_task 06B0  
__size_of_interrupt_handler 0DA6       __size_of_rr_scheduler 0068                  _INTCONbits 000FF2  
               _tarefa_dois 0B9E                 _tarefa_tres 0DAE                    intlevel1 0000  
                  intlevel2 0000            ___lwmod@dividend 0001                 ??_task_IDLE 0080  
               ??_tarefa_um 009E                _rr_scheduler 0E1C             ___lwmod@divisor 0003  
           ___lwmod@counter 0005                ?_despachante 0001  
